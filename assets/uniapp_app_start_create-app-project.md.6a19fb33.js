import{_ as a,o as s,c as l,Q as e}from"./chunks/framework.c3fd347f.js";const y=JSON.parse('{"title":"第一集：HbuilderX创建项目和CLI创建项目的详细区别和优缺点","description":"","frontmatter":{},"headers":[],"relativePath":"uniapp/app/start/create-app-project.md","filePath":"uniapp/app/start/create-app-project.md","lastUpdated":1707147609000}'),n={name:"uniapp/app/start/create-app-project.md"},p=e(`<h1 id="第一集-hbuilderx创建项目和cli创建项目的详细区别和优缺点" tabindex="-1">第一集：HbuilderX创建项目和CLI创建项目的详细区别和优缺点 <a class="header-anchor" href="#第一集-hbuilderx创建项目和cli创建项目的详细区别和优缺点" aria-label="Permalink to &quot;第一集：HbuilderX创建项目和CLI创建项目的详细区别和优缺点&quot;">​</a></h1><p>  作为一名刚入职的前端工程师，你可能已经听说过 Uniapp 框架，并且了解到公司需要使用它来开发一个 App。在开始项目之前，你需要选择合适的项目创建方式。<br>   本文将为你介绍两种常见的 Uniapp 项目创建方式：使用 Hbuilder 和使用 CLI（命令行界面），并对它们的区别和优缺点进行详细比较。</p><h2 id="_1-使用-hbuilder-创建项目" tabindex="-1">1. 使用 Hbuilder 创建项目 <a class="header-anchor" href="#_1-使用-hbuilder-创建项目" aria-label="Permalink to &quot;1. 使用 Hbuilder 创建项目&quot;">​</a></h2><h3 id="优点" tabindex="-1">优点 <a class="header-anchor" href="#优点" aria-label="Permalink to &quot;优点&quot;">​</a></h3><ul><li><strong>无需自行安装node</strong> HBuilderX可视化创建的项目，是一种免node开发概念。工程代码在项目目录下，编译器在HBuilderX目录下而不是项目下，编译结果在项目的unpackage目录下。</li><li><strong>内置依赖</strong> less、scss、ts等编译器的自动安装。</li><li><strong>可视化开发</strong>：Hbuilder 提供直观的界面，让你无需过多命令行操作，即可完成项目的创建和开发。</li><li><strong>uniapp语法提示全面</strong> HBuilderX为uni-app做了大量优化，其他ide搭配uni-app使用也可以用，但没有为uni-app优化过。其他ide没有uni-app的app和uniCloud的运行、调试工具。这些工具在HBuilderX里。</li><li><strong>版本一致</strong> HBuilderX内置了uni-app的编译器，HBuilderX升级后，uni-app的编译器也会升级。HBuilderX升级后，uni-app的编译器也会升级。HBuilderX升级后，uni-app的编译器也会升级。这样，uni-app的编译器、HBuilderX的版本、uni-app运行时这3者的版本保持一致，会减少非常多的问题。</li></ul><h3 id="缺点" tabindex="-1">缺点 <a class="header-anchor" href="#缺点" aria-label="Permalink to &quot;缺点&quot;">​</a></h3><ul><li>相比较vscode而言，缺少自己喜欢或者习惯使用的很多插件。</li></ul><h2 id="_2-使用-cli-创建项目" tabindex="-1">2. 使用 CLI 创建项目 <a class="header-anchor" href="#_2-使用-cli-创建项目" aria-label="Permalink to &quot;2. 使用 CLI 创建项目&quot;">​</a></h2><h3 id="优点-1" tabindex="-1">优点 <a class="header-anchor" href="#优点-1" aria-label="Permalink to &quot;优点&quot;">​</a></h3><ul><li><strong>灵活性</strong>：CLI 方式更加灵活，适用于习惯命令行操作的开发者，也可以与其他工具无缝集成。使用vscode开发，也可以通过HBuilderX打开项目，实现uni-app的编译器、运行、调试等功能。</li><li><strong>持续更新</strong>：由于 CLI 是基于 Node.js 的，可以通过 npm 安装更新的插件和工具，保持项目的持续更新和维护。</li><li><strong>插件丰富</strong> vscode插件丰富，可以使用大量插件提效开发。</li></ul><h3 id="缺点-1" tabindex="-1">缺点 <a class="header-anchor" href="#缺点-1" aria-label="Permalink to &quot;缺点&quot;">​</a></h3><ul><li><strong>编译器不会自动更新</strong> cli项目下的编译器不会跟随HBuilderX升级而升级，只能开发者手敲npm命令升级。编译器版本出现问题，需要开发者自己解决。有时候很难排查到问题，需要自己去官网了解更新内容，然后手动升级。（有一次排查了很久😅）</li><li>使用cli项目，那么less、scss、ts等编译器需要自己手动敲npm命令安装。</li><li><strong>自行下载示例项目</strong> 使用cli创建项目时，cli需要从npm安装，预置的项目模板选择从github下载。</li></ul><h2 id="注意点" tabindex="-1">注意点 <a class="header-anchor" href="#注意点" aria-label="Permalink to &quot;注意点&quot;">​</a></h2><ul><li>如想用其他ide开发uni-app，只能使用cli模式.其他ide没有内置uni-app的编译器，所以其他ide开发uni-app，只能把编译器安装在项目下，也就是cli创建的项目格式。</li><li>使用cli创建的项目，如果想使用HBuilderX的编译器、运行、调试等功能，可以通过HBuilderX打开项目，实现uni-app的编译器、运行、调试等功能。</li></ul><h2 id="_3-hbuilderx创建项目步骤" tabindex="-1">3. HbuilderX创建项目步骤 <a class="header-anchor" href="#_3-hbuilderx创建项目步骤" aria-label="Permalink to &quot;3. HbuilderX创建项目步骤&quot;">​</a></h2><h3 id="安装-hbuilderx" tabindex="-1">安装 HbuilderX <a class="header-anchor" href="#安装-hbuilderx" aria-label="Permalink to &quot;安装 HbuilderX&quot;">​</a></h3><p>首先，你需要下载并安装 <a href="https://www.dcloud.io/hbuilderx.html" target="_blank" rel="noreferrer">HbuilderX</a> 工具。它支持多个操作系统，包括 Windows、Mac 和 Linux。</p><h3 id="创建-uniapp-项目" tabindex="-1">创建 Uniapp 项目 <a class="header-anchor" href="#创建-uniapp-项目" aria-label="Permalink to &quot;创建 Uniapp 项目&quot;">​</a></h3><p>在安装完成后，打开 Hbuilder，并按照以下步骤创建 Uniapp 项目：</p><ol><li>点击 &quot;新建项目&quot;，然后选择 &quot;uni-app&quot; 选项。</li><li>输入项目名称和保存路径，选择要开发的目标平台（如H5、小程序、App等）。</li><li>选择项目模板，可以选择默认模板或者从已有模板创建。</li></ol><h3 id="开发和调试" tabindex="-1">开发和调试 <a class="header-anchor" href="#开发和调试" aria-label="Permalink to &quot;开发和调试&quot;">​</a></h3><p>Hbuilder 提供了可视化的界面，使得开发过程更加直观和高效。你可以在编辑器中编写代码、实时预览，并且通过连接真机来进行调试。</p><h2 id="_4-使用-cli-创建项目" tabindex="-1">4. 使用 CLI 创建项目 <a class="header-anchor" href="#_4-使用-cli-创建项目" aria-label="Permalink to &quot;4. 使用 CLI 创建项目&quot;">​</a></h2><p>除了 Hbuilder 可视化工具，Uniapp 也提供了命令行界面（CLI）的方式来创建和管理项目。下面是使用 CLI 创建项目的步骤：</p><h3 id="安装-node-js-和-npm" tabindex="-1">安装 Node.js 和 npm <a class="header-anchor" href="#安装-node-js-和-npm" aria-label="Permalink to &quot;安装 Node.js 和 npm&quot;">​</a></h3><p>CLI 是基于 Node.js 和 npm 的，所以在开始之前，确保你已经安装了它们。</p><h3 id="安装-vue-cli-和-uniapp-cli" tabindex="-1">安装 Vue CLI 和 Uniapp CLI <a class="header-anchor" href="#安装-vue-cli-和-uniapp-cli" aria-label="Permalink to &quot;安装 Vue CLI 和 Uniapp CLI&quot;">​</a></h3><p>在命令行中执行以下命令来安装 Vue CLI 和 Uniapp CLI：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-g</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">@vue/cli</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-g</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@vue/cli</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="创建-uniapp-项目-1" tabindex="-1">创建 Uniapp 项目 <a class="header-anchor" href="#创建-uniapp-项目-1" aria-label="Permalink to &quot;创建 Uniapp 项目&quot;">​</a></h3><h4 id="使用正式版-对应hbuilderx最新正式版" tabindex="-1">使用正式版（对应HBuilderX最新正式版） <a class="header-anchor" href="#使用正式版-对应hbuilderx最新正式版" aria-label="Permalink to &quot;使用正式版（对应HBuilderX最新正式版）&quot;">​</a></h4><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">vue</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">create</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-p</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dcloudio/uni-preset-vue</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">my-project</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">vue</span><span style="color:#24292E;"> </span><span style="color:#032F62;">create</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-p</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dcloudio/uni-preset-vue</span><span style="color:#24292E;"> </span><span style="color:#032F62;">my-project</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="使用alpha版-对应hbuilderx最新alpha版" tabindex="-1">使用alpha版（对应HBuilderX最新alpha版） <a class="header-anchor" href="#使用alpha版-对应hbuilderx最新alpha版" aria-label="Permalink to &quot;使用alpha版（对应HBuilderX最新alpha版）&quot;">​</a></h4><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">vue</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">create</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-p</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dcloudio/uni-preset-vue#alpha</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">my-alpha-project</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">vue</span><span style="color:#24292E;"> </span><span style="color:#032F62;">create</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-p</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dcloudio/uni-preset-vue#alpha</span><span style="color:#24292E;"> </span><span style="color:#032F62;">my-alpha-project</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="使用vue3-vite版" tabindex="-1">使用Vue3/Vite版 <a class="header-anchor" href="#使用vue3-vite版" aria-label="Permalink to &quot;使用Vue3/Vite版&quot;">​</a></h4><ul><li>创建以 javascript 开发的工程（如命令行创建失败，请直接访问 gitee 下载模板）</li></ul><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">degit</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dcloudio/uni-preset-vue#vite</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">my-vue3-project</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">degit</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dcloudio/uni-preset-vue#vite</span><span style="color:#24292E;"> </span><span style="color:#032F62;">my-vue3-project</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">degit</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dcloudio/uni-preset-vue#vite-alpha</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">my-vue3-project</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">degit</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dcloudio/uni-preset-vue#vite-alpha</span><span style="color:#24292E;"> </span><span style="color:#032F62;">my-vue3-project</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>创建以 typescript 开发的工程（如命令行创建失败，请直接访问 gitee 下载模板）</li></ul><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">degit</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dcloudio/uni-preset-vue#vite-ts</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">my-vue3-project</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">degit</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dcloudio/uni-preset-vue#vite-ts</span><span style="color:#24292E;"> </span><span style="color:#032F62;">my-vue3-project</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="开发和调试-1" tabindex="-1">开发和调试 <a class="header-anchor" href="#开发和调试-1" aria-label="Permalink to &quot;开发和调试&quot;">​</a></h3><p>通过 CLI 创建的项目可以在任何代码编辑器中进行开发。你可以使用预设的脚本来运行和调试项目，也可以通过连接真机来进行调试。</p><h2 id="_5-对比和选择" tabindex="-1">5. 对比和选择 <a class="header-anchor" href="#_5-对比和选择" aria-label="Permalink to &quot;5. 对比和选择&quot;">​</a></h2><p>无论是使用 Hbuilder 还是 CLI，它们都有各自的优点和缺点。你可以根据项目的需求和个人喜好来选择合适的创建方式。</p><p>个人比较依赖vscode的许多插件，所以选择cli创建项目，使用vscode开发uni-app。如果你是新手，建议使用HbuilderX创建项目，因为它的可视化开发，让你无需过多命令行操作，即可完成项目的创建和开发。</p><h2 id="_6-项目结构" tabindex="-1">6. 项目结构 <a class="header-anchor" href="#_6-项目结构" aria-label="Permalink to &quot;6. 项目结构&quot;">​</a></h2><p>HbuilderX创建的项目结构如下：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">├─components</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#组件目录</span></span>
<span class="line"><span style="color:#B392F0;">├─pages</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#页面目录</span></span>
<span class="line"><span style="color:#B392F0;">├─static</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#静态资源目录</span></span>
<span class="line"><span style="color:#B392F0;">├─unpackage</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#编译结果目录</span></span>
<span class="line"><span style="color:#B392F0;">├─App.vue</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#应用配置，用来配置App全局样式以及监听 应用生命周期</span></span>
<span class="line"><span style="color:#B392F0;">├─main.js</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#Vue初始化入口文件</span></span>
<span class="line"><span style="color:#B392F0;">├─manifest.json</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#配置应用名称、appid、logo、版本等打包信息</span></span>
<span class="line"><span style="color:#B392F0;">├─pages.json</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#配置页面路由、导航条、选项卡等页面类信息</span></span>
<span class="line"><span style="color:#B392F0;">├─uni_modules</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#uni_modules目录</span></span>
<span class="line"><span style="color:#B392F0;">└─uni.scss</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#uni-app内置的常用样式变量</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">├─components</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#组件目录</span></span>
<span class="line"><span style="color:#6F42C1;">├─pages</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#页面目录</span></span>
<span class="line"><span style="color:#6F42C1;">├─static</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#静态资源目录</span></span>
<span class="line"><span style="color:#6F42C1;">├─unpackage</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#编译结果目录</span></span>
<span class="line"><span style="color:#6F42C1;">├─App.vue</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#应用配置，用来配置App全局样式以及监听 应用生命周期</span></span>
<span class="line"><span style="color:#6F42C1;">├─main.js</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#Vue初始化入口文件</span></span>
<span class="line"><span style="color:#6F42C1;">├─manifest.json</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#配置应用名称、appid、logo、版本等打包信息</span></span>
<span class="line"><span style="color:#6F42C1;">├─pages.json</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#配置页面路由、导航条、选项卡等页面类信息</span></span>
<span class="line"><span style="color:#6F42C1;">├─uni_modules</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#uni_modules目录</span></span>
<span class="line"><span style="color:#6F42C1;">└─uni.scss</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#uni-app内置的常用样式变量</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>cli创建的项目结构和HbuilderX创建的项目结构相似，以上目录在src目录下，但是cli创建的项目结构下，没有内置编译器，需要自己手动安装。</p><h2 id="_7-参考文档" tabindex="-1">7. 参考文档 <a class="header-anchor" href="#_7-参考文档" aria-label="Permalink to &quot;7. 参考文档&quot;">​</a></h2><ul><li><a href="https://uniapp.dcloud.io/quickstart-hx?id=%e7%ac%ac%e4%b8%80%e6%ad%a5%ef%bc%9ahbuilderx%e5%88%9b%e5%bb%ba%e9%a1%b9%e7%9b%ae" target="_blank" rel="noreferrer">HbuilderX创建项目</a></li><li><a href="https://uniapp.dcloud.net.cn/quickstart-cli.html" target="_blank" rel="noreferrer">CLI创建项目</a></li><li><a href="https://uniapp.dcloud.net.cn/quickstart-cli.html#clidiff" target="_blank" rel="noreferrer">cli创建项目和HBuilderX可视化界面创建项目的区别</a></li></ul>`,51),o=[p];function r(i,t,c,d,u,h){return s(),l("div",null,o)}const E=a(n,[["render",r]]);export{y as __pageData,E as default};
