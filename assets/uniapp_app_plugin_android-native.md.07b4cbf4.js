import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.c3fd347f.js";const b=JSON.parse('{"title":"第二十三集 安卓原生插件开发示例——后台保活","description":"","frontmatter":{},"headers":[],"relativePath":"uniapp/app/plugin/android-native.md","filePath":"uniapp/app/plugin/android-native.md","lastUpdated":1707147609000}'),p={name:"uniapp/app/plugin/android-native.md"},o=l(`<h1 id="第二十三集-安卓原生插件开发示例——后台保活" tabindex="-1">第二十三集 安卓原生插件开发示例——后台保活 <a class="header-anchor" href="#第二十三集-安卓原生插件开发示例——后台保活" aria-label="Permalink to &quot;第二十三集 安卓原生插件开发示例——后台保活&quot;">​</a></h1><h3 id="一、开发环境" tabindex="-1">一、开发环境 <a class="header-anchor" href="#一、开发环境" aria-label="Permalink to &quot;一、开发环境&quot;">​</a></h3><ul><li>JAVA环境 jdk1.8</li><li>Android Studio 下载地址：<a href="https://developer.android.google.cn/studio/index.html" target="_blank" rel="noreferrer">Android Studio官网</a> OR <a href="http://www.android-studio.org/" target="_blank" rel="noreferrer">Android Studio中文社区</a></li><li>App离线SDK下载：请下载2.9.8+版本的<a href="https://nativesupport.dcloud.net.cn/AppDocs/download/android" target="_blank" rel="noreferrer">android平台SDK</a></li><li>HBuilderX 下载地址：<a href="https://www.dcloud.io/hbuilderx.html" target="_blank" rel="noreferrer">官方下载地址</a></li></ul><h3 id="二、导入官方原生项目" tabindex="-1">二、导入官方原生项目 <a class="header-anchor" href="#二、导入官方原生项目" aria-label="Permalink to &quot;二、导入官方原生项目&quot;">​</a></h3><ul><li><p>UniPlugin-Hello-AS工程请在<a href="https://nativesupport.dcloud.net.cn/AppDocs/download/android" target="_blank" rel="noreferrer">App离线SDK</a>中查找</p><p><img src="https://yhyblog-2023-2-8.oss-cn-hangzhou.aliyuncs.com/md/2023/05/202305051758834.png" alt=""></p></li><li><p>导入选择UniPlugin-Hello-AS工程，点击OK! 等待工程导入完毕。</p></li></ul><p><img src="https://yhyblog-2023-2-8.oss-cn-hangzhou.aliyuncs.com/md/2023/05/202305051758779.png" alt=""></p><ul><li>删除不必要的官方案例</li></ul><p><img src="https://yhyblog-2023-2-8.oss-cn-hangzhou.aliyuncs.com/md/2023/05/202305051825798.png" alt="image-20230505182546432"></p><ul><li>新建插件模块，名字自取</li></ul><p><img src="https://yhyblog-2023-2-8.oss-cn-hangzhou.aliyuncs.com/md/2023/05/202305051838308.png" alt="image-20230505183830103"></p><p><img src="https://yhyblog-2023-2-8.oss-cn-hangzhou.aliyuncs.com/md/2023/05/202305051839159.png" alt="image-20230505183959044"></p><ul><li>修改文件</li></ul><p><img src="https://yhyblog-2023-2-8.oss-cn-hangzhou.aliyuncs.com/md/2023/05/202305051849790.png" alt="image-20230505184917736"></p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">apply plugin</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;com.android.library&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">android {</span></span>
<span class="line"><span style="color:#E1E4E8;">    compileSdkVersion </span><span style="color:#79B8FF;">33</span></span>
<span class="line"><span style="color:#E1E4E8;">    defaultConfig {</span></span>
<span class="line"><span style="color:#E1E4E8;">        minSdkVersion </span><span style="color:#79B8FF;">21</span></span>
<span class="line"><span style="color:#E1E4E8;">        targetSdkVersion </span><span style="color:#79B8FF;">33</span></span>
<span class="line"><span style="color:#E1E4E8;">        testInstrumentationRunner </span><span style="color:#9ECBFF;">&#39;androidx.test.runner.AndroidJUnitRunner&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    buildTypes {</span></span>
<span class="line"><span style="color:#E1E4E8;">        release {</span></span>
<span class="line"><span style="color:#E1E4E8;">            minifyEnabled </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">            proguardFiles </span><span style="color:#B392F0;">getDefaultProguardFile</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;proguard-android.txt&#39;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&#39;proguard-rules.pro&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//导入aar需要的配置</span></span>
<span class="line"><span style="color:#E1E4E8;">repositories {</span></span>
<span class="line"><span style="color:#E1E4E8;">    flatDir {</span></span>
<span class="line"><span style="color:#E1E4E8;">        dirs </span><span style="color:#9ECBFF;">&#39;libs&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">dependencies {</span></span>
<span class="line"><span style="color:#E1E4E8;">    compileOnly </span><span style="color:#B392F0;">fileTree</span><span style="color:#E1E4E8;">(dir</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;libs&#39;</span><span style="color:#E1E4E8;">, include</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;*.jar&#39;</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//必须添加的依赖</span></span>
<span class="line"><span style="color:#E1E4E8;">    compileOnly </span><span style="color:#B392F0;">fileTree</span><span style="color:#E1E4E8;">(dir</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;../app/libs&#39;</span><span style="color:#E1E4E8;">, include</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;uniapp-v8-release.aar&#39;</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#E1E4E8;">    compileOnly </span><span style="color:#9ECBFF;">&#39;androidx.recyclerview:recyclerview:1.0.0&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    compileOnly </span><span style="color:#9ECBFF;">&#39;androidx.legacy:legacy-support-v4:1.0.0&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    compileOnly </span><span style="color:#9ECBFF;">&#39;androidx.appcompat:appcompat:1.0.0&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    implementation </span><span style="color:#9ECBFF;">&#39;com.alibaba:fastjson:1.2.83&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    implementation </span><span style="color:#9ECBFF;">&quot;androidx.work:work-runtime:2.8.1&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">apply plugin</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;com.android.library&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">android {</span></span>
<span class="line"><span style="color:#24292E;">    compileSdkVersion </span><span style="color:#005CC5;">33</span></span>
<span class="line"><span style="color:#24292E;">    defaultConfig {</span></span>
<span class="line"><span style="color:#24292E;">        minSdkVersion </span><span style="color:#005CC5;">21</span></span>
<span class="line"><span style="color:#24292E;">        targetSdkVersion </span><span style="color:#005CC5;">33</span></span>
<span class="line"><span style="color:#24292E;">        testInstrumentationRunner </span><span style="color:#032F62;">&#39;androidx.test.runner.AndroidJUnitRunner&#39;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    buildTypes {</span></span>
<span class="line"><span style="color:#24292E;">        release {</span></span>
<span class="line"><span style="color:#24292E;">            minifyEnabled </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">            proguardFiles </span><span style="color:#6F42C1;">getDefaultProguardFile</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;proguard-android.txt&#39;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&#39;proguard-rules.pro&#39;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//导入aar需要的配置</span></span>
<span class="line"><span style="color:#24292E;">repositories {</span></span>
<span class="line"><span style="color:#24292E;">    flatDir {</span></span>
<span class="line"><span style="color:#24292E;">        dirs </span><span style="color:#032F62;">&#39;libs&#39;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">dependencies {</span></span>
<span class="line"><span style="color:#24292E;">    compileOnly </span><span style="color:#6F42C1;">fileTree</span><span style="color:#24292E;">(dir</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;libs&#39;</span><span style="color:#24292E;">, include</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;*.jar&#39;</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//必须添加的依赖</span></span>
<span class="line"><span style="color:#24292E;">    compileOnly </span><span style="color:#6F42C1;">fileTree</span><span style="color:#24292E;">(dir</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;../app/libs&#39;</span><span style="color:#24292E;">, include</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;uniapp-v8-release.aar&#39;</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">    compileOnly </span><span style="color:#032F62;">&#39;androidx.recyclerview:recyclerview:1.0.0&#39;</span></span>
<span class="line"><span style="color:#24292E;">    compileOnly </span><span style="color:#032F62;">&#39;androidx.legacy:legacy-support-v4:1.0.0&#39;</span></span>
<span class="line"><span style="color:#24292E;">    compileOnly </span><span style="color:#032F62;">&#39;androidx.appcompat:appcompat:1.0.0&#39;</span></span>
<span class="line"><span style="color:#24292E;">    implementation </span><span style="color:#032F62;">&#39;com.alibaba:fastjson:1.2.83&#39;</span></span>
<span class="line"><span style="color:#24292E;">    implementation </span><span style="color:#032F62;">&quot;androidx.work:work-runtime:2.8.1&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><ul><li>修改插件模块AndroidManifest.xml,保证 2 和 3 名字一致</li></ul><p><img src="https://yhyblog-2023-2-8.oss-cn-hangzhou.aliyuncs.com/md/2023/05/202305051858711.png" alt="image-20230505185816618"></p><ul><li>OnePxActivity.java(Activity 1像素保活)</li></ul><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">OnePxActivity</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AppCompatActivity</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String TAG </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> OnePxActivity.class.</span><span style="color:#B392F0;">getSimpleName</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> BroadcastReceiver br;</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onCreate</span><span style="color:#E1E4E8;">(Bundle </span><span style="color:#FFAB70;">savedInstanceState</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">onCreate</span><span style="color:#E1E4E8;">(savedInstanceState);</span></span>
<span class="line"><span style="color:#E1E4E8;">        Window window </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getWindow</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        window.</span><span style="color:#B392F0;">setGravity</span><span style="color:#E1E4E8;">(Gravity.LEFT </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> Gravity.TOP);</span></span>
<span class="line"><span style="color:#E1E4E8;">        WindowManager.LayoutParams params </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> window.</span><span style="color:#B392F0;">getAttributes</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        params.x </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        params.y </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        params.height </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        params.width </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        window.</span><span style="color:#B392F0;">setAttributes</span><span style="color:#E1E4E8;">(params);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//结束该页面的广播</span></span>
<span class="line"><span style="color:#E1E4E8;">        br </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BroadcastReceiver</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">            @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onReceive</span><span style="color:#E1E4E8;">(Context </span><span style="color:#FFAB70;">context</span><span style="color:#E1E4E8;">, Intent </span><span style="color:#FFAB70;">intent</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                Log.</span><span style="color:#B392F0;">d</span><span style="color:#E1E4E8;">(TAG,</span><span style="color:#9ECBFF;">&quot;OnepxActivity finish   ================&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">finish</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        };</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">registerReceiver</span><span style="color:#E1E4E8;">(br, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">IntentFilter</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;finish activity&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//检查屏幕状态</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">checkScreenOn</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;onCreate&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 检查屏幕状态  isScreenOn为true  屏幕“亮”结束该Activity</span></span>
<span class="line"><span style="color:#6A737D;">     * */</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">checkScreenOn</span><span style="color:#E1E4E8;">(String </span><span style="color:#FFAB70;">methodName</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        Log.</span><span style="color:#B392F0;">d</span><span style="color:#E1E4E8;">(TAG,</span><span style="color:#9ECBFF;">&quot;from call method: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> methodName);</span></span>
<span class="line"><span style="color:#E1E4E8;">        PowerManager pm </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (PowerManager) OnePxActivity.this.</span><span style="color:#B392F0;">getSystemService</span><span style="color:#E1E4E8;">(Context.POWER_SERVICE);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> isScreenOn </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> pm.</span><span style="color:#B392F0;">isScreenOn</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        Log.</span><span style="color:#B392F0;">i</span><span style="color:#E1E4E8;">(TAG,</span><span style="color:#9ECBFF;">&quot;isScreenOn: &quot;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">isScreenOn);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(isScreenOn){</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">finish</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onDestroy</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        Log.</span><span style="color:#B392F0;">i</span><span style="color:#E1E4E8;">(TAG,</span><span style="color:#9ECBFF;">&quot;===onDestroy===&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">unregisterReceiver</span><span style="color:#E1E4E8;">(br);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (IllegalArgumentException </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">            Log.</span><span style="color:#B392F0;">e</span><span style="color:#E1E4E8;">(TAG,</span><span style="color:#9ECBFF;">&quot;receiver is not resisted: &quot;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">e);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">onDestroy</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onResume</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">onResume</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">checkScreenOn</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;onResume&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">OnePxActivity</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AppCompatActivity</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String TAG </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> OnePxActivity.class.</span><span style="color:#6F42C1;">getSimpleName</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> BroadcastReceiver br;</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">protected</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onCreate</span><span style="color:#24292E;">(Bundle </span><span style="color:#E36209;">savedInstanceState</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">super</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">onCreate</span><span style="color:#24292E;">(savedInstanceState);</span></span>
<span class="line"><span style="color:#24292E;">        Window window </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getWindow</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        window.</span><span style="color:#6F42C1;">setGravity</span><span style="color:#24292E;">(Gravity.LEFT </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> Gravity.TOP);</span></span>
<span class="line"><span style="color:#24292E;">        WindowManager.LayoutParams params </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> window.</span><span style="color:#6F42C1;">getAttributes</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        params.x </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        params.y </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        params.height </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        params.width </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        window.</span><span style="color:#6F42C1;">setAttributes</span><span style="color:#24292E;">(params);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//结束该页面的广播</span></span>
<span class="line"><span style="color:#24292E;">        br </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BroadcastReceiver</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">            @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onReceive</span><span style="color:#24292E;">(Context </span><span style="color:#E36209;">context</span><span style="color:#24292E;">, Intent </span><span style="color:#E36209;">intent</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                Log.</span><span style="color:#6F42C1;">d</span><span style="color:#24292E;">(TAG,</span><span style="color:#032F62;">&quot;OnepxActivity finish   ================&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">finish</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        };</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">registerReceiver</span><span style="color:#24292E;">(br, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IntentFilter</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;finish activity&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//检查屏幕状态</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">checkScreenOn</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;onCreate&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">     * 检查屏幕状态  isScreenOn为true  屏幕“亮”结束该Activity</span></span>
<span class="line"><span style="color:#6A737D;">     * */</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">checkScreenOn</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">methodName</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        Log.</span><span style="color:#6F42C1;">d</span><span style="color:#24292E;">(TAG,</span><span style="color:#032F62;">&quot;from call method: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> methodName);</span></span>
<span class="line"><span style="color:#24292E;">        PowerManager pm </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (PowerManager) OnePxActivity.this.</span><span style="color:#6F42C1;">getSystemService</span><span style="color:#24292E;">(Context.POWER_SERVICE);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> isScreenOn </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pm.</span><span style="color:#6F42C1;">isScreenOn</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        Log.</span><span style="color:#6F42C1;">i</span><span style="color:#24292E;">(TAG,</span><span style="color:#032F62;">&quot;isScreenOn: &quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">isScreenOn);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(isScreenOn){</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">finish</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">protected</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onDestroy</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        Log.</span><span style="color:#6F42C1;">i</span><span style="color:#24292E;">(TAG,</span><span style="color:#032F62;">&quot;===onDestroy===&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">try</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">unregisterReceiver</span><span style="color:#24292E;">(br);</span></span>
<span class="line"><span style="color:#24292E;">        }</span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (IllegalArgumentException </span><span style="color:#E36209;">e</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">            Log.</span><span style="color:#6F42C1;">e</span><span style="color:#24292E;">(TAG,</span><span style="color:#032F62;">&quot;receiver is not resisted: &quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">e);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">super</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">onDestroy</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">protected</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onResume</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">super</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">onResume</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">checkScreenOn</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;onResume&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br></div></div><ul><li>OnePxReceiver.java</li></ul><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">OnePxReceiver</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BroadcastReceiver</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> OnePxReceiver receiver;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String TAG </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> OnePxReceiver.class.</span><span style="color:#B392F0;">getSimpleName</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onReceive</span><span style="color:#E1E4E8;">(Context </span><span style="color:#FFAB70;">context</span><span style="color:#E1E4E8;">, Intent </span><span style="color:#FFAB70;">intent</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (intent.</span><span style="color:#B392F0;">getAction</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">equals</span><span style="color:#E1E4E8;">(Intent.ACTION_SCREEN_OFF)) {</span><span style="color:#6A737D;">//屏幕被关闭</span></span>
<span class="line"><span style="color:#E1E4E8;">            Intent it </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Intent</span><span style="color:#E1E4E8;">(context, OnePxActivity.class);</span></span>
<span class="line"><span style="color:#E1E4E8;">            it.</span><span style="color:#B392F0;">addFlags</span><span style="color:#E1E4E8;">(Intent.FLAG_ACTIVITY_NEW_TASK);</span></span>
<span class="line"><span style="color:#E1E4E8;">            context.</span><span style="color:#B392F0;">startActivity</span><span style="color:#E1E4E8;">(it);</span></span>
<span class="line"><span style="color:#E1E4E8;">            Log.</span><span style="color:#B392F0;">i</span><span style="color:#E1E4E8;">(TAG,</span><span style="color:#9ECBFF;">&quot;1px--screen off-&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (intent.</span><span style="color:#B392F0;">getAction</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">equals</span><span style="color:#E1E4E8;">(Intent.ACTION_SCREEN_ON)) {</span><span style="color:#6A737D;">//屏幕被打开</span></span>
<span class="line"><span style="color:#E1E4E8;">            context.</span><span style="color:#B392F0;">sendBroadcast</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Intent</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;finish activity&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">            Log.</span><span style="color:#B392F0;">i</span><span style="color:#E1E4E8;">(TAG,</span><span style="color:#9ECBFF;">&quot;1px--screen on-&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">register1pxReceiver</span><span style="color:#E1E4E8;">(Context </span><span style="color:#FFAB70;">context</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (receiver </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            receiver </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">OnePxReceiver</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        context.</span><span style="color:#B392F0;">registerReceiver</span><span style="color:#E1E4E8;">(receiver, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">IntentFilter</span><span style="color:#E1E4E8;">(Intent.ACTION_SCREEN_OFF));</span></span>
<span class="line"><span style="color:#E1E4E8;">        context.</span><span style="color:#B392F0;">registerReceiver</span><span style="color:#E1E4E8;">(receiver, </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">IntentFilter</span><span style="color:#E1E4E8;">(Intent.ACTION_SCREEN_ON));</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">unregister1pxReceiver</span><span style="color:#E1E4E8;">(Context </span><span style="color:#FFAB70;">context</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        context.</span><span style="color:#B392F0;">unregisterReceiver</span><span style="color:#E1E4E8;">(receiver);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">OnePxReceiver</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BroadcastReceiver</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> OnePxReceiver receiver;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String TAG </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> OnePxReceiver.class.</span><span style="color:#6F42C1;">getSimpleName</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onReceive</span><span style="color:#24292E;">(Context </span><span style="color:#E36209;">context</span><span style="color:#24292E;">, Intent </span><span style="color:#E36209;">intent</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (intent.</span><span style="color:#6F42C1;">getAction</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">equals</span><span style="color:#24292E;">(Intent.ACTION_SCREEN_OFF)) {</span><span style="color:#6A737D;">//屏幕被关闭</span></span>
<span class="line"><span style="color:#24292E;">            Intent it </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Intent</span><span style="color:#24292E;">(context, OnePxActivity.class);</span></span>
<span class="line"><span style="color:#24292E;">            it.</span><span style="color:#6F42C1;">addFlags</span><span style="color:#24292E;">(Intent.FLAG_ACTIVITY_NEW_TASK);</span></span>
<span class="line"><span style="color:#24292E;">            context.</span><span style="color:#6F42C1;">startActivity</span><span style="color:#24292E;">(it);</span></span>
<span class="line"><span style="color:#24292E;">            Log.</span><span style="color:#6F42C1;">i</span><span style="color:#24292E;">(TAG,</span><span style="color:#032F62;">&quot;1px--screen off-&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (intent.</span><span style="color:#6F42C1;">getAction</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">equals</span><span style="color:#24292E;">(Intent.ACTION_SCREEN_ON)) {</span><span style="color:#6A737D;">//屏幕被打开</span></span>
<span class="line"><span style="color:#24292E;">            context.</span><span style="color:#6F42C1;">sendBroadcast</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Intent</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;finish activity&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">            Log.</span><span style="color:#6F42C1;">i</span><span style="color:#24292E;">(TAG,</span><span style="color:#032F62;">&quot;1px--screen on-&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">register1pxReceiver</span><span style="color:#24292E;">(Context </span><span style="color:#E36209;">context</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (receiver </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            receiver </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">OnePxReceiver</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        context.</span><span style="color:#6F42C1;">registerReceiver</span><span style="color:#24292E;">(receiver, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IntentFilter</span><span style="color:#24292E;">(Intent.ACTION_SCREEN_OFF));</span></span>
<span class="line"><span style="color:#24292E;">        context.</span><span style="color:#6F42C1;">registerReceiver</span><span style="color:#24292E;">(receiver, </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IntentFilter</span><span style="color:#24292E;">(Intent.ACTION_SCREEN_ON));</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">unregister1pxReceiver</span><span style="color:#24292E;">(Context </span><span style="color:#E36209;">context</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        context.</span><span style="color:#6F42C1;">unregisterReceiver</span><span style="color:#24292E;">(receiver);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">activity</span></span>
<span class="line"><span style="color:#E1E4E8;">            android</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">name</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;com.example.test.OnePxActivity&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">            android</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">exported</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;true&quot;</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">intent</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">filter</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">action</span></span>
<span class="line"><span style="color:#E1E4E8;">                    android</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">name</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;android.intent.action.VIEW&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">intent</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">filter</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">activity</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">receiver android</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">name</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;com.example.test.OnePxReceiver&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">            android</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">exported</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;true&quot;</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">intent</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">filter</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">action android</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">name</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;android.intent.action.SCREEN_OFF&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">action android</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">name</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;android.intent.action.SCREEN_ON&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">intent</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">filter</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">receiver</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">uses</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">permission android</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;">name</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;android.permission.FOREGROUND_SERVICE&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">activity</span></span>
<span class="line"><span style="color:#24292E;">            android</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;com.example.test.OnePxActivity&quot;</span></span>
<span class="line"><span style="color:#24292E;">            android</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">exported</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;true&quot;</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">intent</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">filter</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">action</span></span>
<span class="line"><span style="color:#24292E;">                    android</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;android.intent.action.VIEW&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">intent</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">filter</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">activity</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">receiver android</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;com.example.test.OnePxReceiver&quot;</span></span>
<span class="line"><span style="color:#24292E;">            android</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">exported</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;true&quot;</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">intent</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">filter</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">action android</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;android.intent.action.SCREEN_OFF&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">action android</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;android.intent.action.SCREEN_ON&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">intent</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">filter</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">receiver</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">uses</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">permission android</span><span style="color:#D73A49;">:</span><span style="color:#24292E;">name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;android.permission.FOREGROUND_SERVICE&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">START_STICKY：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    “粘性”。如果service进程被kill掉，保留service的状态为开始状态，但不保留递送的intent对象。随后系统会尝试重新创建service，由于服务状态为开始状态，所以创建服务后一定会调用</span><span style="color:#B392F0;">onStartCommand</span><span style="color:#E1E4E8;">(Intent,</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">)方法。如果在此期间没有任何启动命令被传递到service，那么参数Intent将为null。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">START_NOT_STICKY：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    “非粘性的”。使用这个返回值时，如果在执行完onStartCommand后，服务被异常kill掉，系统不会自动重启该服务。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">START_REDELIVER_INTENT：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    重传Intent。使用这个返回值时，如果在执行完onStartCommand后，服务被异常kill掉，系统会自动重启该服务，并将Intent的值传入。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">START_STICKY_COMPATIBILITY：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    START_STICKY的兼容版本，但不保证服务被kill后一定能重启。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">只要 targetSdkVersion 不小于5，就默认是 START_STICKY。 但是某些ROM 系统不会拉活。并且经过测试，Service 第一次被异常杀死后很快被重启，第二次会比第一次慢，第三次又会比前一次慢，一旦在短时间内 Service 被杀死4</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">5次，则系统不再拉起。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">START_STICKY：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    “粘性”。如果service进程被kill掉，保留service的状态为开始状态，但不保留递送的intent对象。随后系统会尝试重新创建service，由于服务状态为开始状态，所以创建服务后一定会调用</span><span style="color:#6F42C1;">onStartCommand</span><span style="color:#24292E;">(Intent,</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">int</span><span style="color:#24292E;">)方法。如果在此期间没有任何启动命令被传递到service，那么参数Intent将为null。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">START_NOT_STICKY：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    “非粘性的”。使用这个返回值时，如果在执行完onStartCommand后，服务被异常kill掉，系统不会自动重启该服务。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">START_REDELIVER_INTENT：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    重传Intent。使用这个返回值时，如果在执行完onStartCommand后，服务被异常kill掉，系统会自动重启该服务，并将Intent的值传入。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">START_STICKY_COMPATIBILITY：</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    START_STICKY的兼容版本，但不保证服务被kill后一定能重启。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">只要 targetSdkVersion 不小于5，就默认是 START_STICKY。 但是某些ROM 系统不会拉活。并且经过测试，Service 第一次被异常杀死后很快被重启，第二次会比第一次慢，第三次又会比前一次慢，一旦在短时间内 Service 被杀死4</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">5次，则系统不再拉起。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><ul><li>WorkManager</li></ul><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">KeepLiveWork</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Worker</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">KeepLiveWork</span><span style="color:#E1E4E8;">(@</span><span style="color:#F97583;">NonNull</span><span style="color:#E1E4E8;"> Context </span><span style="color:#FFAB70;">context</span><span style="color:#E1E4E8;">, @</span><span style="color:#F97583;">NonNull</span><span style="color:#E1E4E8;"> WorkerParameters </span><span style="color:#FFAB70;">workerParams</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">(context, workerParams);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">NonNull</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> Result </span><span style="color:#B392F0;">doWork</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        Log.</span><span style="color:#B392F0;">e</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;KeepAlive&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;doWork: &quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        KeepAliveJobService.</span><span style="color:#B392F0;">startJob</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">getApplicationContext</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> Result.</span><span style="color:#B392F0;">success</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">KeepLiveWork</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Worker</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">KeepLiveWork</span><span style="color:#24292E;">(@</span><span style="color:#D73A49;">NonNull</span><span style="color:#24292E;"> Context </span><span style="color:#E36209;">context</span><span style="color:#24292E;">, @</span><span style="color:#D73A49;">NonNull</span><span style="color:#24292E;"> WorkerParameters </span><span style="color:#E36209;">workerParams</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">super</span><span style="color:#24292E;">(context, workerParams);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">NonNull</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Result </span><span style="color:#6F42C1;">doWork</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        Log.</span><span style="color:#6F42C1;">e</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;KeepAlive&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;doWork: &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        KeepAliveJobService.</span><span style="color:#6F42C1;">startJob</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">getApplicationContext</span><span style="color:#24292E;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> Result.</span><span style="color:#6F42C1;">success</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 添加任务</span></span>
<span class="line"><span style="color:#E1E4E8;">            OneTimeWorkRequest oneTimeWorkRequest </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> OneTimeWorkRequest</span></span>
<span class="line"><span style="color:#E1E4E8;">                    .</span><span style="color:#B392F0;">Builder</span><span style="color:#E1E4E8;">(KeepLiveWork.class)</span></span>
<span class="line"><span style="color:#E1E4E8;">                    .</span><span style="color:#B392F0;">setInitialDelay</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;">, TimeUnit.SECONDS)</span></span>
<span class="line"><span style="color:#E1E4E8;">                    .</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">            WorkManager.</span><span style="color:#B392F0;">getInstance</span><span style="color:#E1E4E8;">(mUniSDKInstance.</span><span style="color:#B392F0;">getContext</span><span style="color:#E1E4E8;">()).</span><span style="color:#B392F0;">enqueue</span><span style="color:#E1E4E8;">(oneTimeWorkRequest);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 添加任务</span></span>
<span class="line"><span style="color:#24292E;">            OneTimeWorkRequest oneTimeWorkRequest </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> OneTimeWorkRequest</span></span>
<span class="line"><span style="color:#24292E;">                    .</span><span style="color:#6F42C1;">Builder</span><span style="color:#24292E;">(KeepLiveWork.class)</span></span>
<span class="line"><span style="color:#24292E;">                    .</span><span style="color:#6F42C1;">setInitialDelay</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">30</span><span style="color:#24292E;">, TimeUnit.SECONDS)</span></span>
<span class="line"><span style="color:#24292E;">                    .</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            WorkManager.</span><span style="color:#6F42C1;">getInstance</span><span style="color:#24292E;">(mUniSDKInstance.</span><span style="color:#6F42C1;">getContext</span><span style="color:#24292E;">()).</span><span style="color:#6F42C1;">enqueue</span><span style="color:#24292E;">(oneTimeWorkRequest);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li>ForegroundService.java(前台服务)</li></ul><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ForegroundService</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Service</span><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> SERVICE_ID </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> String TAG </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ForegroundService.class.</span><span style="color:#B392F0;">getSimpleName</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Nullable</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> IBinder </span><span style="color:#B392F0;">onBind</span><span style="color:#E1E4E8;">(Intent </span><span style="color:#FFAB70;">intent</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onCreate</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">onCreate</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onStartCommand</span><span style="color:#E1E4E8;">(Intent </span><span style="color:#FFAB70;">intent</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">flags</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">startId</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (Build.VERSION.SDK_INT</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">Build.VERSION_CODES.JELLY_BEAN_MR2){</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">//4.3以下</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">startForeground</span><span style="color:#E1E4E8;">(SERVICE_ID,</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Notification</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (Build.VERSION.SDK_INT</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">Build.VERSION_CODES.O){</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">//7.0以下</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">startForeground</span><span style="color:#E1E4E8;">(SERVICE_ID,</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Notification</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">//删除通知栏</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">startService</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Intent</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">,InnerService.class));</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">//8.0以上</span></span>
<span class="line"><span style="color:#E1E4E8;">            NotificationManager notificationManager </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (NotificationManager) </span><span style="color:#B392F0;">getSystemService</span><span style="color:#E1E4E8;">(NOTIFICATION_SERVICE);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">//NotificationManager.IMPORTANCE_MIN 通知栏消息的重要级别  最低，不让弹出</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">//IMPORTANCE_MIN 前台时，在阴影区能看到，后台时 阴影区不消失，增加显示 IMPORTANCE_NONE时 一样的提示</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">//IMPORTANCE_NONE app在前台没有通知显示，后台时有</span></span>
<span class="line"><span style="color:#E1E4E8;">            NotificationChannel channel </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">NotificationChannel</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;channel&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;后台运行&quot;</span><span style="color:#E1E4E8;">, NotificationManager.IMPORTANCE_NONE);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 取消小红点</span></span>
<span class="line"><span style="color:#E1E4E8;">            channel.</span><span style="color:#B392F0;">enableLights</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (notificationManager</span><span style="color:#F97583;">!=</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">                CharSequence title </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> intent.</span><span style="color:#B392F0;">getStringExtra</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;title&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                CharSequence text </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> intent.</span><span style="color:#B392F0;">getStringExtra</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;text&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">// 点击跳转页面</span></span>
<span class="line"><span style="color:#E1E4E8;">                PendingIntent pendingIntent </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> PendingIntent.</span><span style="color:#B392F0;">getActivity</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, intent, PendingIntent.FLAG_IMMUTABLE);</span></span>
<span class="line"><span style="color:#E1E4E8;">                notificationManager.</span><span style="color:#B392F0;">createNotificationChannel</span><span style="color:#E1E4E8;">(channel);</span></span>
<span class="line"><span style="color:#E1E4E8;">                NotificationCompat.Builder builder </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> NotificationCompat.</span><span style="color:#B392F0;">Builder</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;channel&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                builder.</span><span style="color:#B392F0;">setContentTitle</span><span style="color:#E1E4E8;">(title)</span></span>
<span class="line"><span style="color:#E1E4E8;">                        .</span><span style="color:#B392F0;">setSmallIcon</span><span style="color:#E1E4E8;">(R.drawable.baseline_lock_24) </span><span style="color:#6A737D;">//图标</span></span>
<span class="line"><span style="color:#E1E4E8;">                        .</span><span style="color:#B392F0;">setContentText</span><span style="color:#E1E4E8;">(text) </span><span style="color:#6A737D;">//标题</span></span>
<span class="line"><span style="color:#E1E4E8;">                        .</span><span style="color:#B392F0;">setPriority</span><span style="color:#E1E4E8;">(NotificationCompat.PRIORITY_DEFAULT) </span><span style="color:#6A737D;">// 设置优先级 PRIORITY_DEFAULT</span></span>
<span class="line"><span style="color:#E1E4E8;">                        .</span><span style="color:#B392F0;">setWhen</span><span style="color:#E1E4E8;">(System.</span><span style="color:#B392F0;">currentTimeMillis</span><span style="color:#E1E4E8;">()) </span><span style="color:#6A737D;">// 设置通知发送的时间戳</span></span>
<span class="line"><span style="color:#E1E4E8;">                        .</span><span style="color:#B392F0;">setContentIntent</span><span style="color:#E1E4E8;">(pendingIntent) </span><span style="color:#6A737D;">// 跳转页面</span></span>
<span class="line"><span style="color:#E1E4E8;">                        .</span><span style="color:#B392F0;">setVisibility</span><span style="color:#E1E4E8;">(NotificationCompat.VISIBILITY_SECRET) </span><span style="color:#6A737D;">// 屏幕可见性，1、VISIBILITY_PUBLIC 在所有锁定屏幕上完整显示此通知 2、VISIBILITY_PRIVATE 隐藏安全锁屏上的敏感或私人信息 3、VISIBILITY_SECRET 不显示任何部分</span></span>
<span class="line"><span style="color:#E1E4E8;">                        .</span><span style="color:#B392F0;">setOngoing</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                Log.</span><span style="color:#B392F0;">e</span><span style="color:#E1E4E8;">(TAG, </span><span style="color:#9ECBFF;">&quot;onStart&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                NotificationManagerCompat notificationManagerCompat </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> NotificationManagerCompat.</span><span style="color:#B392F0;">from</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                notificationManagerCompat.</span><span style="color:#B392F0;">notify</span><span style="color:#E1E4E8;">(SERVICE_ID,builder.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">startForeground</span><span style="color:#E1E4E8;">(SERVICE_ID,builder.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">onStartCommand</span><span style="color:#E1E4E8;">(intent, flags, startId);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onDestroy</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        Log.</span><span style="color:#B392F0;">e</span><span style="color:#E1E4E8;">(TAG, </span><span style="color:#9ECBFF;">&quot;onDestroy&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        NotificationManagerCompat notificationManagerCompat </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> NotificationManagerCompat.</span><span style="color:#B392F0;">from</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        notificationManagerCompat.</span><span style="color:#B392F0;">cancelAll</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">stopForeground</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">onDestroy</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">InnerService</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Service</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">        @</span><span style="color:#F97583;">Nullable</span></span>
<span class="line"><span style="color:#E1E4E8;">        @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> IBinder </span><span style="color:#B392F0;">onBind</span><span style="color:#E1E4E8;">(Intent </span><span style="color:#FFAB70;">intent</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onCreate</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">super</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">onCreate</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">            Log.</span><span style="color:#B392F0;">d</span><span style="color:#E1E4E8;">(KeepAlive.TAG, </span><span style="color:#9ECBFF;">&quot;onCreate: &quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">startForeground</span><span style="color:#E1E4E8;">(SERVICE_ID,</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Notification</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">stopSelf</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ForegroundService</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Service</span><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> SERVICE_ID </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> String TAG </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ForegroundService.class.</span><span style="color:#6F42C1;">getSimpleName</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Nullable</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> IBinder </span><span style="color:#6F42C1;">onBind</span><span style="color:#24292E;">(Intent </span><span style="color:#E36209;">intent</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onCreate</span><span style="color:#24292E;">() {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">super</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">onCreate</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onStartCommand</span><span style="color:#24292E;">(Intent </span><span style="color:#E36209;">intent</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">flags</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">startId</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (Build.VERSION.SDK_INT</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">Build.VERSION_CODES.JELLY_BEAN_MR2){</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//4.3以下</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">startForeground</span><span style="color:#24292E;">(SERVICE_ID,</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Notification</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">        }</span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (Build.VERSION.SDK_INT</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">Build.VERSION_CODES.O){</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//7.0以下</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">startForeground</span><span style="color:#24292E;">(SERVICE_ID,</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Notification</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//删除通知栏</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">startService</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Intent</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">,InnerService.class));</span></span>
<span class="line"><span style="color:#24292E;">        }</span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//8.0以上</span></span>
<span class="line"><span style="color:#24292E;">            NotificationManager notificationManager </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (NotificationManager) </span><span style="color:#6F42C1;">getSystemService</span><span style="color:#24292E;">(NOTIFICATION_SERVICE);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//NotificationManager.IMPORTANCE_MIN 通知栏消息的重要级别  最低，不让弹出</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//IMPORTANCE_MIN 前台时，在阴影区能看到，后台时 阴影区不消失，增加显示 IMPORTANCE_NONE时 一样的提示</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//IMPORTANCE_NONE app在前台没有通知显示，后台时有</span></span>
<span class="line"><span style="color:#24292E;">            NotificationChannel channel </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">NotificationChannel</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;channel&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;后台运行&quot;</span><span style="color:#24292E;">, NotificationManager.IMPORTANCE_NONE);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 取消小红点</span></span>
<span class="line"><span style="color:#24292E;">            channel.</span><span style="color:#6F42C1;">enableLights</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (notificationManager</span><span style="color:#D73A49;">!=</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">                CharSequence title </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> intent.</span><span style="color:#6F42C1;">getStringExtra</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;title&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                CharSequence text </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> intent.</span><span style="color:#6F42C1;">getStringExtra</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;text&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// 点击跳转页面</span></span>
<span class="line"><span style="color:#24292E;">                PendingIntent pendingIntent </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> PendingIntent.</span><span style="color:#6F42C1;">getActivity</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, intent, PendingIntent.FLAG_IMMUTABLE);</span></span>
<span class="line"><span style="color:#24292E;">                notificationManager.</span><span style="color:#6F42C1;">createNotificationChannel</span><span style="color:#24292E;">(channel);</span></span>
<span class="line"><span style="color:#24292E;">                NotificationCompat.Builder builder </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> NotificationCompat.</span><span style="color:#6F42C1;">Builder</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;channel&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                builder.</span><span style="color:#6F42C1;">setContentTitle</span><span style="color:#24292E;">(title)</span></span>
<span class="line"><span style="color:#24292E;">                        .</span><span style="color:#6F42C1;">setSmallIcon</span><span style="color:#24292E;">(R.drawable.baseline_lock_24) </span><span style="color:#6A737D;">//图标</span></span>
<span class="line"><span style="color:#24292E;">                        .</span><span style="color:#6F42C1;">setContentText</span><span style="color:#24292E;">(text) </span><span style="color:#6A737D;">//标题</span></span>
<span class="line"><span style="color:#24292E;">                        .</span><span style="color:#6F42C1;">setPriority</span><span style="color:#24292E;">(NotificationCompat.PRIORITY_DEFAULT) </span><span style="color:#6A737D;">// 设置优先级 PRIORITY_DEFAULT</span></span>
<span class="line"><span style="color:#24292E;">                        .</span><span style="color:#6F42C1;">setWhen</span><span style="color:#24292E;">(System.</span><span style="color:#6F42C1;">currentTimeMillis</span><span style="color:#24292E;">()) </span><span style="color:#6A737D;">// 设置通知发送的时间戳</span></span>
<span class="line"><span style="color:#24292E;">                        .</span><span style="color:#6F42C1;">setContentIntent</span><span style="color:#24292E;">(pendingIntent) </span><span style="color:#6A737D;">// 跳转页面</span></span>
<span class="line"><span style="color:#24292E;">                        .</span><span style="color:#6F42C1;">setVisibility</span><span style="color:#24292E;">(NotificationCompat.VISIBILITY_SECRET) </span><span style="color:#6A737D;">// 屏幕可见性，1、VISIBILITY_PUBLIC 在所有锁定屏幕上完整显示此通知 2、VISIBILITY_PRIVATE 隐藏安全锁屏上的敏感或私人信息 3、VISIBILITY_SECRET 不显示任何部分</span></span>
<span class="line"><span style="color:#24292E;">                        .</span><span style="color:#6F42C1;">setOngoing</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                Log.</span><span style="color:#6F42C1;">e</span><span style="color:#24292E;">(TAG, </span><span style="color:#032F62;">&quot;onStart&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                NotificationManagerCompat notificationManagerCompat </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> NotificationManagerCompat.</span><span style="color:#6F42C1;">from</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                notificationManagerCompat.</span><span style="color:#6F42C1;">notify</span><span style="color:#24292E;">(SERVICE_ID,builder.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">startForeground</span><span style="color:#24292E;">(SERVICE_ID,builder.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">super</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">onStartCommand</span><span style="color:#24292E;">(intent, flags, startId);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onDestroy</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        Log.</span><span style="color:#6F42C1;">e</span><span style="color:#24292E;">(TAG, </span><span style="color:#032F62;">&quot;onDestroy&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        NotificationManagerCompat notificationManagerCompat </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> NotificationManagerCompat.</span><span style="color:#6F42C1;">from</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        notificationManagerCompat.</span><span style="color:#6F42C1;">cancelAll</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">stopForeground</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">super</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">onDestroy</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">InnerService</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Service</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">        @</span><span style="color:#D73A49;">Nullable</span></span>
<span class="line"><span style="color:#24292E;">        @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> IBinder </span><span style="color:#6F42C1;">onBind</span><span style="color:#24292E;">(Intent </span><span style="color:#E36209;">intent</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onCreate</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">super</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">onCreate</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            Log.</span><span style="color:#6F42C1;">d</span><span style="color:#24292E;">(KeepAlive.TAG, </span><span style="color:#032F62;">&quot;onCreate: &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">startForeground</span><span style="color:#24292E;">(SERVICE_ID,</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Notification</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">stopSelf</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br></div></div><ul><li>KeepAliveJobService.java</li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">JobScheduler允许在特定状态与特定时间间隔周期执行任务。可以利用它的这个特点完成保活的功能,效果即开启一个定时器，与普通定时器不同的是其调度由系统完成。    同样在某些ROM可能并不能达到需要的效果</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">JobScheduler允许在特定状态与特定时间间隔周期执行任务。可以利用它的这个特点完成保活的功能,效果即开启一个定时器，与普通定时器不同的是其调度由系统完成。    同样在某些ROM可能并不能达到需要的效果</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">SuppressLint</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;SpecifyJobSchedulerIdRange&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">KeepAliveJobService</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">JobService</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onStartJob</span><span style="color:#E1E4E8;">(JobParameters </span><span style="color:#FFAB70;">jobParameters</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (Build.VERSION.SDK_INT</span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> Build.VERSION_CODES.O){</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">startJob</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> isRunning </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> util.</span><span style="color:#B392F0;">isRunningService</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">, KeepAliveJobService.class.</span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">isRunning) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">startService</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Intent</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">, KeepAliveJobService.class));</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">startJob</span><span style="color:#E1E4E8;">(Context </span><span style="color:#FFAB70;">context</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        JobScheduler jobScheduler </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (JobScheduler) context.</span><span style="color:#B392F0;">getSystemService</span><span style="color:#E1E4E8;">(JOB_SCHEDULER_SERVICE);</span></span>
<span class="line"><span style="color:#E1E4E8;">        JobInfo.Builder builder </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> JobInfo.</span><span style="color:#B392F0;">Builder</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">27</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ComponentName</span><span style="color:#E1E4E8;">(context.</span><span style="color:#B392F0;">getPackageName</span><span style="color:#E1E4E8;">(), KeepAliveJobService.class.</span><span style="color:#B392F0;">getName</span><span style="color:#E1E4E8;">()))</span></span>
<span class="line"><span style="color:#E1E4E8;">                .</span><span style="color:#B392F0;">setPersisted</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (Build.VERSION.SDK_INT</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">Build.VERSION_CODES.N){</span></span>
<span class="line"><span style="color:#E1E4E8;">            builder.</span><span style="color:#B392F0;">setPeriodic</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            builder.</span><span style="color:#B392F0;">setMinimumLatency</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        jobScheduler.</span><span style="color:#B392F0;">schedule</span><span style="color:#E1E4E8;">(builder.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">        Log.</span><span style="color:#B392F0;">e</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;JobService&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;jobService: &quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">stopJob</span><span style="color:#E1E4E8;">(Context </span><span style="color:#FFAB70;">context</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">        Log.</span><span style="color:#B392F0;">e</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;JobService&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;stop&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        JobScheduler jobScheduler </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (JobScheduler) context.</span><span style="color:#B392F0;">getSystemService</span><span style="color:#E1E4E8;">(JOB_SCHEDULER_SERVICE);</span></span>
<span class="line"><span style="color:#E1E4E8;">        jobScheduler.</span><span style="color:#B392F0;">cancel</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">27</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onStopJob</span><span style="color:#E1E4E8;">(JobParameters </span><span style="color:#FFAB70;">jobParameters</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        Log.</span><span style="color:#B392F0;">e</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;JobService&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;stop_jobService: &quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">SuppressLint</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;SpecifyJobSchedulerIdRange&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">KeepAliveJobService</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">JobService</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onStartJob</span><span style="color:#24292E;">(JobParameters </span><span style="color:#E36209;">jobParameters</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (Build.VERSION.SDK_INT</span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> Build.VERSION_CODES.O){</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">startJob</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> isRunning </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> util.</span><span style="color:#6F42C1;">isRunningService</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">, KeepAliveJobService.class.</span><span style="color:#6F42C1;">getName</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">isRunning) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">startService</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Intent</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">, KeepAliveJobService.class));</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">startJob</span><span style="color:#24292E;">(Context </span><span style="color:#E36209;">context</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        JobScheduler jobScheduler </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (JobScheduler) context.</span><span style="color:#6F42C1;">getSystemService</span><span style="color:#24292E;">(JOB_SCHEDULER_SERVICE);</span></span>
<span class="line"><span style="color:#24292E;">        JobInfo.Builder builder </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> JobInfo.</span><span style="color:#6F42C1;">Builder</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">27</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ComponentName</span><span style="color:#24292E;">(context.</span><span style="color:#6F42C1;">getPackageName</span><span style="color:#24292E;">(), KeepAliveJobService.class.</span><span style="color:#6F42C1;">getName</span><span style="color:#24292E;">()))</span></span>
<span class="line"><span style="color:#24292E;">                .</span><span style="color:#6F42C1;">setPersisted</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (Build.VERSION.SDK_INT</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">Build.VERSION_CODES.N){</span></span>
<span class="line"><span style="color:#24292E;">            builder.</span><span style="color:#6F42C1;">setPeriodic</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        }</span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            builder.</span><span style="color:#6F42C1;">setMinimumLatency</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        jobScheduler.</span><span style="color:#6F42C1;">schedule</span><span style="color:#24292E;">(builder.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">        Log.</span><span style="color:#6F42C1;">e</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;JobService&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;jobService: &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">stopJob</span><span style="color:#24292E;">(Context </span><span style="color:#E36209;">context</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        Log.</span><span style="color:#6F42C1;">e</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;JobService&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;stop&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        JobScheduler jobScheduler </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (JobScheduler) context.</span><span style="color:#6F42C1;">getSystemService</span><span style="color:#24292E;">(JOB_SCHEDULER_SERVICE);</span></span>
<span class="line"><span style="color:#24292E;">        jobScheduler.</span><span style="color:#6F42C1;">cancel</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">27</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onStopJob</span><span style="color:#24292E;">(JobParameters </span><span style="color:#E36209;">jobParameters</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        Log.</span><span style="color:#6F42C1;">e</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;JobService&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;stop_jobService: &quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><ul><li>插件代码</li></ul><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">keepAlive</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">UniModule</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    String TAG </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;KEEP_ALIVE&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">UniJSMethod</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">uiThread</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">start</span><span style="color:#E1E4E8;">(JSONObject </span><span style="color:#FFAB70;">options</span><span style="color:#E1E4E8;">, UniJSCallback </span><span style="color:#FFAB70;">callback</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">throws</span><span style="color:#E1E4E8;"> JSONException {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            Log.</span><span style="color:#B392F0;">e</span><span style="color:#E1E4E8;">(TAG, </span><span style="color:#9ECBFF;">&quot;testAsyncFunc--&quot;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">options);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(mUniSDKInstance </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> mUniSDKInstance.</span><span style="color:#B392F0;">getContext</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> Activity) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                Intent intent </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Intent</span><span style="color:#E1E4E8;">(mUniSDKInstance.</span><span style="color:#B392F0;">getContext</span><span style="color:#E1E4E8;">(), ForegroundService.class);</span></span>
<span class="line"><span style="color:#E1E4E8;">                intent.</span><span style="color:#B392F0;">putExtra</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;title&quot;</span><span style="color:#E1E4E8;">,options.</span><span style="color:#B392F0;">getString</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;title&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">                intent.</span><span style="color:#B392F0;">putExtra</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;text&quot;</span><span style="color:#E1E4E8;">,options.</span><span style="color:#B392F0;">getString</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;text&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#6A737D;">//                 开启前台通知服务</span></span>
<span class="line"><span style="color:#E1E4E8;">                mUniSDKInstance.</span><span style="color:#B392F0;">getContext</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">startService</span><span style="color:#E1E4E8;">(intent);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//                 开启一像素服务</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">options.</span><span style="color:#B392F0;">containsKey</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;onePxEnabled&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> options.</span><span style="color:#B392F0;">getBoolean</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;onePxEnabled&quot;</span><span style="color:#E1E4E8;">)){</span></span>
<span class="line"><span style="color:#E1E4E8;">                    OnePxReceiver.</span><span style="color:#B392F0;">register1pxReceiver</span><span style="color:#E1E4E8;">(mUniSDKInstance.</span><span style="color:#B392F0;">getContext</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//                 添加任务</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">options.</span><span style="color:#B392F0;">containsKey</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;workerManager&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> options.</span><span style="color:#B392F0;">getBoolean</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;workerManager&quot;</span><span style="color:#E1E4E8;">)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    OneTimeWorkRequest oneTimeWorkRequest </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> OneTimeWorkRequest</span></span>
<span class="line"><span style="color:#E1E4E8;">                            .</span><span style="color:#B392F0;">Builder</span><span style="color:#E1E4E8;">(KeepLiveWork.class)</span></span>
<span class="line"><span style="color:#E1E4E8;">                            .</span><span style="color:#B392F0;">setInitialDelay</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, TimeUnit.SECONDS)</span></span>
<span class="line"><span style="color:#E1E4E8;">                            .</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                    WorkManager.</span><span style="color:#B392F0;">getInstance</span><span style="color:#E1E4E8;">(mUniSDKInstance.</span><span style="color:#B392F0;">getContext</span><span style="color:#E1E4E8;">()).</span><span style="color:#B392F0;">enqueue</span><span style="color:#E1E4E8;">(oneTimeWorkRequest);</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(callback </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                JSONObject data </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">JSONObject</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                data.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;code&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                callback.</span><span style="color:#B392F0;">invoke</span><span style="color:#E1E4E8;">(data);</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">//callback.invokeAndKeepAlive(data);</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;"> (Exception </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(callback </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                JSONObject data </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">JSONObject</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                data.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;code&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                data.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;err&quot;</span><span style="color:#E1E4E8;">,e.</span><span style="color:#B392F0;">getMessage</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">                callback.</span><span style="color:#B392F0;">invoke</span><span style="color:#E1E4E8;">(data);</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">//callback.invokeAndKeepAlive(data);</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    @</span><span style="color:#F97583;">UniJSMethod</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">uiThread</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">destroy</span><span style="color:#E1E4E8;">(UniJSCallback </span><span style="color:#FFAB70;">callback</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(mUniSDKInstance </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> mUniSDKInstance.</span><span style="color:#B392F0;">getContext</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> Activity) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            Intent intent </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Intent</span><span style="color:#E1E4E8;">(mUniSDKInstance.</span><span style="color:#B392F0;">getContext</span><span style="color:#E1E4E8;">(), ForegroundService.class);</span></span>
<span class="line"><span style="color:#E1E4E8;">            mUniSDKInstance.</span><span style="color:#B392F0;">getContext</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">stopService</span><span style="color:#E1E4E8;">(intent);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            OnePxReceiver.</span><span style="color:#B392F0;">unregister1pxReceiver</span><span style="color:#E1E4E8;">(mUniSDKInstance.</span><span style="color:#B392F0;">getContext</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">            KeepAliveJobService.</span><span style="color:#B392F0;">stopJob</span><span style="color:#E1E4E8;">(mUniSDKInstance.</span><span style="color:#B392F0;">getContext</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(callback </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            JSONObject data </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">JSONObject</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">            data.</span><span style="color:#B392F0;">put</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;code&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            callback.</span><span style="color:#B392F0;">invoke</span><span style="color:#E1E4E8;">(data);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">//callback.invokeAndKeepAlive(data);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">keepAlive</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">UniModule</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    String TAG </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;KEEP_ALIVE&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">UniJSMethod</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">uiThread</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">start</span><span style="color:#24292E;">(JSONObject </span><span style="color:#E36209;">options</span><span style="color:#24292E;">, UniJSCallback </span><span style="color:#E36209;">callback</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">throws</span><span style="color:#24292E;"> JSONException {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            Log.</span><span style="color:#6F42C1;">e</span><span style="color:#24292E;">(TAG, </span><span style="color:#032F62;">&quot;testAsyncFunc--&quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">options);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(mUniSDKInstance </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> mUniSDKInstance.</span><span style="color:#6F42C1;">getContext</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> Activity) {</span></span>
<span class="line"><span style="color:#24292E;">                Intent intent </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Intent</span><span style="color:#24292E;">(mUniSDKInstance.</span><span style="color:#6F42C1;">getContext</span><span style="color:#24292E;">(), ForegroundService.class);</span></span>
<span class="line"><span style="color:#24292E;">                intent.</span><span style="color:#6F42C1;">putExtra</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;title&quot;</span><span style="color:#24292E;">,options.</span><span style="color:#6F42C1;">getString</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;title&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">                intent.</span><span style="color:#6F42C1;">putExtra</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;text&quot;</span><span style="color:#24292E;">,options.</span><span style="color:#6F42C1;">getString</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;text&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#6A737D;">//                 开启前台通知服务</span></span>
<span class="line"><span style="color:#24292E;">                mUniSDKInstance.</span><span style="color:#6F42C1;">getContext</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">startService</span><span style="color:#24292E;">(intent);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//                 开启一像素服务</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">options.</span><span style="color:#6F42C1;">containsKey</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;onePxEnabled&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> options.</span><span style="color:#6F42C1;">getBoolean</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;onePxEnabled&quot;</span><span style="color:#24292E;">)){</span></span>
<span class="line"><span style="color:#24292E;">                    OnePxReceiver.</span><span style="color:#6F42C1;">register1pxReceiver</span><span style="color:#24292E;">(mUniSDKInstance.</span><span style="color:#6F42C1;">getContext</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//                 添加任务</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">options.</span><span style="color:#6F42C1;">containsKey</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;workerManager&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> options.</span><span style="color:#6F42C1;">getBoolean</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;workerManager&quot;</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">                    OneTimeWorkRequest oneTimeWorkRequest </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> OneTimeWorkRequest</span></span>
<span class="line"><span style="color:#24292E;">                            .</span><span style="color:#6F42C1;">Builder</span><span style="color:#24292E;">(KeepLiveWork.class)</span></span>
<span class="line"><span style="color:#24292E;">                            .</span><span style="color:#6F42C1;">setInitialDelay</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, TimeUnit.SECONDS)</span></span>
<span class="line"><span style="color:#24292E;">                            .</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">                    WorkManager.</span><span style="color:#6F42C1;">getInstance</span><span style="color:#24292E;">(mUniSDKInstance.</span><span style="color:#6F42C1;">getContext</span><span style="color:#24292E;">()).</span><span style="color:#6F42C1;">enqueue</span><span style="color:#24292E;">(oneTimeWorkRequest);</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(callback </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                JSONObject data </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">JSONObject</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">                data.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;code&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                callback.</span><span style="color:#6F42C1;">invoke</span><span style="color:#24292E;">(data);</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">//callback.invokeAndKeepAlive(data);</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span><span style="color:#D73A49;">catch</span><span style="color:#24292E;"> (Exception </span><span style="color:#E36209;">e</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(callback </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                JSONObject data </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">JSONObject</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">                data.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;code&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                data.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;err&quot;</span><span style="color:#24292E;">,e.</span><span style="color:#6F42C1;">getMessage</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">                callback.</span><span style="color:#6F42C1;">invoke</span><span style="color:#24292E;">(data);</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">//callback.invokeAndKeepAlive(data);</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">UniJSMethod</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">uiThread</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">destroy</span><span style="color:#24292E;">(UniJSCallback </span><span style="color:#E36209;">callback</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(mUniSDKInstance </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> mUniSDKInstance.</span><span style="color:#6F42C1;">getContext</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> Activity) {</span></span>
<span class="line"><span style="color:#24292E;">            Intent intent </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Intent</span><span style="color:#24292E;">(mUniSDKInstance.</span><span style="color:#6F42C1;">getContext</span><span style="color:#24292E;">(), ForegroundService.class);</span></span>
<span class="line"><span style="color:#24292E;">            mUniSDKInstance.</span><span style="color:#6F42C1;">getContext</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">stopService</span><span style="color:#24292E;">(intent);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            OnePxReceiver.</span><span style="color:#6F42C1;">unregister1pxReceiver</span><span style="color:#24292E;">(mUniSDKInstance.</span><span style="color:#6F42C1;">getContext</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">            KeepAliveJobService.</span><span style="color:#6F42C1;">stopJob</span><span style="color:#24292E;">(mUniSDKInstance.</span><span style="color:#6F42C1;">getContext</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(callback </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            JSONObject data </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">JSONObject</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            data.</span><span style="color:#6F42C1;">put</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;code&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            callback.</span><span style="color:#6F42C1;">invoke</span><span style="color:#24292E;">(data);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">//callback.invokeAndKeepAlive(data);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br></div></div><ul><li><h3 id="proguard-rules-prowenjian添加原生混淆" tabindex="-1"><code>proguard-rules.pro</code>wenjian添加原生混淆 <a class="header-anchor" href="#proguard-rules-prowenjian添加原生混淆" aria-label="Permalink to &quot;\`proguard-rules.pro\`wenjian添加原生混淆&quot;">​</a></h3></li></ul><p><img src="https://yhyblog-2023-2-8.oss-cn-hangzhou.aliyuncs.com/md/2023/05/image-20230510181025522.png" alt="image-20230510181025522"></p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">keep </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> class </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> extends io.dcloud.weex.AppHookProxy{</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">;}</span></span>
<span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">keep </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> class </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> extends io.dcloud.feature.uniapp.UniAppHookProxy{</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">;}</span></span>
<span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">keep </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> class </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> extends io.dcloud.feature.uniapp.common.UniModule{</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">;}</span></span>
<span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">keep </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> class </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> extends io.dcloud.feature.uniapp.ui.component.UniComponent{</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">;}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;">keep </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> class </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> extends io.dcloud.weex.AppHookProxy{</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">;}</span></span>
<span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;">keep </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> class </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> extends io.dcloud.feature.uniapp.UniAppHookProxy{</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">;}</span></span>
<span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;">keep </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> class </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> extends io.dcloud.feature.uniapp.common.UniModule{</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">;}</span></span>
<span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;">keep </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> class </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> extends io.dcloud.feature.uniapp.ui.component.UniComponent{</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">;}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>代码开发完成，点击<code>assembleRelease</code>打包</li></ul><p><img src="https://yhyblog-2023-2-8.oss-cn-hangzhou.aliyuncs.com/md/2023/05/image-20230510181936874.png" alt="image-20230510181936874"></p><h3 id="三、android-studio内调试插件" tabindex="-1">三、Android Studio内调试插件 <a class="header-anchor" href="#三、android-studio内调试插件" aria-label="Permalink to &quot;三、Android Studio内调试插件&quot;">​</a></h3><p>1、完成uni-app项目离线打包，参考<a href="https://www.yhy.gd.cn/articles/139" target="_blank" rel="noreferrer">uni-app离线打包</a></p><p>uni-app项目具体使用代码（vue3)：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">		ref</span></span>
<span class="line"><span style="color:#E1E4E8;">	} </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;vue&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">		onLoad</span></span>
<span class="line"><span style="color:#E1E4E8;">	} </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@dcloudio/uni-app&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">msg</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ref</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">code</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ref</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">start</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">KeepAlive</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> uni.</span><span style="color:#B392F0;">requireNativePlugin</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Keep_Alive&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#6A737D;">// 启动服务</span></span>
<span class="line"><span style="color:#E1E4E8;">		KeepAlive.</span><span style="color:#B392F0;">start</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#9ECBFF;">&quot;title&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;app&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#9ECBFF;">&quot;text&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;正在后台运行&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">			},</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">ret</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">				console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(ret)</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (ret.code </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">					uni.</span><span style="color:#B392F0;">showToast</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">						title: </span><span style="color:#9ECBFF;">&#39;启动成功&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">						icon: </span><span style="color:#9ECBFF;">&#39;none&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">					})</span></span>
<span class="line"><span style="color:#E1E4E8;">				}</span></span>
<span class="line"><span style="color:#E1E4E8;">			})</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">stop</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">KeepAlive</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> uni.</span><span style="color:#B392F0;">requireNativePlugin</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Keep_Alive&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#6A737D;">// 销毁服务</span></span>
<span class="line"><span style="color:#E1E4E8;">		KeepAlive.</span><span style="color:#B392F0;">destroy</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">ret</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (ret.code </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">					uni.</span><span style="color:#B392F0;">showToast</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">						title: </span><span style="color:#9ECBFF;">&#39;停止服务&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">						icon: </span><span style="color:#9ECBFF;">&#39;none&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">					})</span></span>
<span class="line"><span style="color:#E1E4E8;">				}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">			})</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		ref</span></span>
<span class="line"><span style="color:#24292E;">	} </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vue&#39;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		onLoad</span></span>
<span class="line"><span style="color:#24292E;">	} </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@dcloudio/uni-app&#39;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">msg</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">code</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">start</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">KeepAlive</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> uni.</span><span style="color:#6F42C1;">requireNativePlugin</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Keep_Alive&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">// 启动服务</span></span>
<span class="line"><span style="color:#24292E;">		KeepAlive.</span><span style="color:#6F42C1;">start</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#032F62;">&quot;title&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;app&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#032F62;">&quot;text&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;正在后台运行&quot;</span></span>
<span class="line"><span style="color:#24292E;">			},</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">ret</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">				console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(ret)</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (ret.code </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">					uni.</span><span style="color:#6F42C1;">showToast</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">						title: </span><span style="color:#032F62;">&#39;启动成功&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">						icon: </span><span style="color:#032F62;">&#39;none&#39;</span></span>
<span class="line"><span style="color:#24292E;">					})</span></span>
<span class="line"><span style="color:#24292E;">				}</span></span>
<span class="line"><span style="color:#24292E;">			})</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">stop</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">KeepAlive</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> uni.</span><span style="color:#6F42C1;">requireNativePlugin</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Keep_Alive&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">// 销毁服务</span></span>
<span class="line"><span style="color:#24292E;">		KeepAlive.</span><span style="color:#6F42C1;">destroy</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">ret</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (ret.code </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">					uni.</span><span style="color:#6F42C1;">showToast</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">						title: </span><span style="color:#032F62;">&#39;停止服务&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">						icon: </span><span style="color:#032F62;">&#39;none&#39;</span></span>
<span class="line"><span style="color:#24292E;">					})</span></span>
<span class="line"><span style="color:#24292E;">				}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">			})</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><p>2、修改以下文件</p><ul><li><p>在app文件下的build.grandle的dependencies下添加</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">implementation </span><span style="color:#B392F0;">project</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;:Keep_Alive&#39;</span><span style="color:#E1E4E8;">) #插件名</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">implementation </span><span style="color:#6F42C1;">project</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;:Keep_Alive&#39;</span><span style="color:#24292E;">) #插件名</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>修改dcloud_uniplugins.json</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;nativePlugins&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;plugins&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">        {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">&quot;type&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;module&quot;</span><span style="color:#E1E4E8;">, #固定</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;XY-Keep_Alive&quot;</span><span style="color:#E1E4E8;">, #插件名</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">&quot;class&quot;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;com.example.keep.keepAlive&quot;</span><span style="color:#E1E4E8;"> #插件路径</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">      ]</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  ]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;nativePlugins&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;plugins&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">        {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;module&quot;</span><span style="color:#24292E;">, #固定</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;XY-Keep_Alive&quot;</span><span style="color:#24292E;">, #插件名</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#032F62;">&quot;class&quot;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;com.example.keep.keepAlive&quot;</span><span style="color:#24292E;"> #插件路径</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">      ]</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  ]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><img src="https://yhyblog-2023-2-8.oss-cn-hangzhou.aliyuncs.com/md/2023/05/image-20230510182445559.png" alt="image-20230510182445559"></p></li></ul><h3 id="四、uni-app本地插件调试" tabindex="-1">四、uni-app本地插件调试： <a class="header-anchor" href="#四、uni-app本地插件调试" aria-label="Permalink to &quot;四、uni-app本地插件调试：&quot;">​</a></h3><ul><li>在自己uni-app项目中添加以下目录，并把上面打包的aar文件放到<code>android</code>目录下：</li></ul><p><img src="https://yhyblog-2023-2-8.oss-cn-hangzhou.aliyuncs.com/md/2023/05/image-20230510210056839.png" alt="image-20230510210056839"></p><p><img src="https://yhyblog-2023-2-8.oss-cn-hangzhou.aliyuncs.com/md/2023/05/image-20230510205936993.png" alt="image-20230510205936993"></p><ul><li>修改<code>package.json</code>配置,<a href="https://nativesupport.dcloud.net.cn/NativePlugin/course/package.html#" target="_blank" rel="noreferrer">详细配置说明查看官网uni原生插件包格式</a>：</li></ul><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;XY-Keep_Alive&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;XY-Keep_Alive&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;version&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;1.0.0&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;description&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;安卓原生后台保活插件&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;_dp_type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;nativeplugin&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;_dp_nativeplugin&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#9ECBFF;">&quot;android&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#9ECBFF;">&quot;hooksClass&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;com.example.keep.keepAlive&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#9ECBFF;">&quot;plugins&quot;</span><span style="color:#E1E4E8;">: [{</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#9ECBFF;">&quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;module&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;XY-Keep_Alive&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#9ECBFF;">&quot;class&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;com.example.keep.keepAlive&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">			}],</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#9ECBFF;">&quot;integrateType&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;aar&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#9ECBFF;">&quot;compileOptions&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#9ECBFF;">&quot;sourceCompatibility&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;1.8&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#9ECBFF;">&quot;targetCompatibility&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;1.8&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">			},</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#9ECBFF;">&quot;dependencies&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#9ECBFF;">&quot;androidx.work:work-runtime:2.7.1&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">			],</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#9ECBFF;">&quot;minSdkVersion&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;21&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#9ECBFF;">&quot;abis&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#9ECBFF;">&quot;armeabi-v7a&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#9ECBFF;">&quot;x86&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#9ECBFF;">&quot;arm64-v8a&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">			]</span></span>
<span class="line"><span style="color:#E1E4E8;">		}</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;XY-Keep_Alive&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;XY-Keep_Alive&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;version&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;1.0.0&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;description&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;安卓原生后台保活插件&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;_dp_type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;nativeplugin&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;_dp_nativeplugin&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#032F62;">&quot;android&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#032F62;">&quot;hooksClass&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;com.example.keep.keepAlive&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#032F62;">&quot;plugins&quot;</span><span style="color:#24292E;">: [{</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;module&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;XY-Keep_Alive&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#032F62;">&quot;class&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;com.example.keep.keepAlive&quot;</span></span>
<span class="line"><span style="color:#24292E;">			}],</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#032F62;">&quot;integrateType&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;aar&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#032F62;">&quot;compileOptions&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#032F62;">&quot;sourceCompatibility&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;1.8&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#032F62;">&quot;targetCompatibility&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;1.8&quot;</span></span>
<span class="line"><span style="color:#24292E;">			},</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#032F62;">&quot;dependencies&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#032F62;">&quot;androidx.work:work-runtime:2.7.1&quot;</span></span>
<span class="line"><span style="color:#24292E;">			],</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#032F62;">&quot;minSdkVersion&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;21&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#032F62;">&quot;abis&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#032F62;">&quot;armeabi-v7a&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#032F62;">&quot;x86&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#032F62;">&quot;arm64-v8a&quot;</span></span>
<span class="line"><span style="color:#24292E;">			]</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><ul><li>在项目目录manifest.json下选择App原生插件配置，选择自己的插件打包运行即可调试。</li></ul><h3 id="五、发布插件市场" tabindex="-1">五、发布<a href="https://ext.dcloud.net.cn/" target="_blank" rel="noreferrer">插件市场</a> <a class="header-anchor" href="#五、发布插件市场" aria-label="Permalink to &quot;五、发布[插件市场](https://ext.dcloud.net.cn/)&quot;">​</a></h3><p>进入插件市场，点击发布插件，按照要求填写相关信息发布即可。</p><p><img src="https://yhyblog-2023-2-8.oss-cn-hangzhou.aliyuncs.com/md/2023/05/image-20230510210817361.png" alt="image-20230510210817361"></p><h3 id="六、代码地址" tabindex="-1">六、代码地址 <a class="header-anchor" href="#六、代码地址" aria-label="Permalink to &quot;六、代码地址&quot;">​</a></h3><p><a href="https://github.com/1yhy/Keep_Alive.git" target="_blank" rel="noreferrer">uni-app安卓原生保活插件</a></p>`,55),e=[o];function t(c,r,E,y,i,u){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{b as __pageData,d as default};
