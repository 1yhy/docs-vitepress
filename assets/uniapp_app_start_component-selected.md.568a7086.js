import{_ as t,o as a,c as e,Q as n}from"./chunks/framework.c3fd347f.js";const b=JSON.parse('{"title":"第三集 组件与组件库","description":"","frontmatter":{},"headers":[],"relativePath":"uniapp/app/start/component-selected.md","filePath":"uniapp/app/start/component-selected.md","lastUpdated":1707147609000}'),s={name:"uniapp/app/start/component-selected.md"},l=n(`<h1 id="第三集-组件与组件库" tabindex="-1">第三集 组件与组件库 <a class="header-anchor" href="#第三集-组件与组件库" aria-label="Permalink to &quot;第三集 组件与组件库&quot;">​</a></h1><p>  组件是uni-app的基础，也是uni-app的核心。uni-app的组件，分为基础组件和扩展组件。这篇文章将介绍uni-app开发app使用的组件与组件库选型。</p><h2 id="_1-基础组件" tabindex="-1">1. 基础组件 <a class="header-anchor" href="#_1-基础组件" aria-label="Permalink to &quot;1. 基础组件&quot;">​</a></h2><p>uni-app的组件，分为基础组件和扩展组件。</p><p>基础组件在uni-app框架中已经内置，无需将内置组件的文件导入项目，也无需注册内置组件，随时可以直接使用，比如<code>&lt;view&gt;</code>组件。</p><p>除了基础组件，都称为扩展组件。扩展组件需要将组件导入项目中才可以使用。可以选择组件库的方式导入，也可以选择单个组件导入。</p><p>开发者可以通过组合这些基础组件进行快速开发。在需要复用的情况下可封装成扩展组件。</p><h2 id="_2-基础组件列表" tabindex="-1">2. 基础组件列表 <a class="header-anchor" href="#_2-基础组件列表" aria-label="Permalink to &quot;2. 基础组件列表&quot;">​</a></h2><p>基础组件分为以下十几大类：</p><h4 id="视图容器-view-container" tabindex="-1">视图容器（View Container）： <a class="header-anchor" href="#视图容器-view-container" aria-label="Permalink to &quot;视图容器（View Container）：&quot;">​</a></h4><table><thead><tr><th>组件名</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td>view</td><td style="text-align:center;">视图容器，类似于HTML中的div</td></tr><tr><td>scroll-view</td><td style="text-align:center;">可滚动视图容器</td></tr><tr><td>swiper</td><td style="text-align:center;">滑块视图容器，比如用于轮播banner</td></tr><tr><td>match-media</td><td style="text-align:center;">屏幕动态适配组件，比如窄屏上不显示某些内容</td></tr><tr><td>movable-area</td><td style="text-align:center;">可拖动区域</td></tr><tr><td>movable-view</td><td style="text-align:center;">可移动的视图容器，在页面中可以拖拽滑动或双指缩放。movable-view</td></tr><tr><td>cover-view</td><td style="text-align:center;">可覆盖在原生组件的上的文本组件</td></tr><tr><td>cover-image</td><td style="text-align:center;">可覆盖在原生组件的上的图片组件</td></tr></tbody></table><h4 id="基础内容-basic-content" tabindex="-1">基础内容（Basic Content）： <a class="header-anchor" href="#基础内容-basic-content" aria-label="Permalink to &quot;基础内容（Basic Content）：&quot;">​</a></h4><table><thead><tr><th>组件名</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td>icon</td><td style="text-align:center;">图标</td></tr><tr><td>text</td><td style="text-align:center;">文字</td></tr><tr><td>rich-text</td><td style="text-align:center;">富文本显示组件</td></tr><tr><td>progress</td><td style="text-align:center;">进度条</td></tr></tbody></table><h4 id="表单组件-form" tabindex="-1">表单组件（Form）： <a class="header-anchor" href="#表单组件-form" aria-label="Permalink to &quot;表单组件（Form）：&quot;">​</a></h4><table><thead><tr><th>标签名</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td>button</td><td style="text-align:center;">按钮</td></tr><tr><td>checkbox</td><td style="text-align:center;">多项选择器</td></tr><tr><td>editor</td><td style="text-align:center;">富文本输入框</td></tr><tr><td>form</td><td style="text-align:center;">表单</td></tr><tr><td>input</td><td style="text-align:center;">输入框</td></tr><tr><td>label</td><td style="text-align:center;">标签</td></tr><tr><td>picker</td><td style="text-align:center;">弹出式列表选择器</td></tr><tr><td>picker-view</td><td style="text-align:center;">窗体内嵌式列表选择器</td></tr><tr><td>radio</td><td style="text-align:center;">单项选择器</td></tr><tr><td>slider</td><td style="text-align:center;">滑动选择器</td></tr><tr><td>switch</td><td style="text-align:center;">开关选择器</td></tr><tr><td>textarea</td><td style="text-align:center;">多行文本输入框</td></tr></tbody></table><h4 id="路由与页面跳转-navigation" tabindex="-1">路由与页面跳转（Navigation）： <a class="header-anchor" href="#路由与页面跳转-navigation" aria-label="Permalink to &quot;路由与页面跳转（Navigation）：&quot;">​</a></h4><table><thead><tr><th>组件名</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td>navigator</td><td style="text-align:center;">页面链接。类似于HTML中的a标签</td></tr></tbody></table><h4 id="媒体组件-media" tabindex="-1">媒体组件（Media）： <a class="header-anchor" href="#媒体组件-media" aria-label="Permalink to &quot;媒体组件（Media）：&quot;">​</a></h4><table><thead><tr><th>组件名</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td>audio</td><td style="text-align:center;">音频</td></tr><tr><td>camera</td><td style="text-align:center;">相机</td></tr><tr><td>image</td><td style="text-align:center;">图片</td></tr><tr><td>video</td><td style="text-align:center;">视频</td></tr><tr><td>live-player</td><td style="text-align:center;">直播播放</td></tr><tr><td>live-pusher</td><td style="text-align:center;">实时音视频录制，也称直播推流</td></tr></tbody></table><h4 id="地图-map" tabindex="-1">地图（Map）： <a class="header-anchor" href="#地图-map" aria-label="Permalink to &quot;地图（Map）：&quot;">​</a></h4><table><thead><tr><th>组件名</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td>map</td><td style="text-align:center;">地图</td></tr></tbody></table><h4 id="画布-canvas" tabindex="-1">画布（Canvas）： <a class="header-anchor" href="#画布-canvas" aria-label="Permalink to &quot;画布（Canvas）：&quot;">​</a></h4><table><thead><tr><th>组件名</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td>canvas</td><td style="text-align:center;">画布</td></tr></tbody></table><h4 id="webview-web-view" tabindex="-1">webview（Web-view）： <a class="header-anchor" href="#webview-web-view" aria-label="Permalink to &quot;webview（Web-view）：&quot;">​</a></h4><table><thead><tr><th>组件名</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td>web-view</td><td style="text-align:center;">web浏览器组件</td></tr></tbody></table><h4 id="广告" tabindex="-1">广告 <a class="header-anchor" href="#广告" aria-label="Permalink to &quot;广告&quot;">​</a></h4><table><thead><tr><th>组件名</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td>ad</td><td style="text-align:center;">广告组件</td></tr><tr><td>ad-draw</td><td style="text-align:center;">沉浸视频流广告组件</td></tr></tbody></table><h4 id="页面属性配置" tabindex="-1">页面属性配置 <a class="header-anchor" href="#页面属性配置" aria-label="Permalink to &quot;页面属性配置&quot;">​</a></h4><table><thead><tr><th>组件名</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td>custom-tab-bar</td><td style="text-align:center;">底部tabbar自定义组件</td></tr><tr><td>navigation-bar</td><td style="text-align:center;">页面顶部导航</td></tr><tr><td>page-meta</td><td style="text-align:center;">页面属性配置节点</td></tr></tbody></table><h4 id="unicloud" tabindex="-1">uniCloud <a class="header-anchor" href="#unicloud" aria-label="Permalink to &quot;uniCloud&quot;">​</a></h4><table><thead><tr><th>组件名</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td>unicloud-db组件</td><td style="text-align:center;">uniCloud数据库访问和操作组件</td></tr></tbody></table><h2 id="_3-扩展组件" tabindex="-1">3. 扩展组件 <a class="header-anchor" href="#_3-扩展组件" aria-label="Permalink to &quot;3. 扩展组件&quot;">​</a></h2><p>虽然所有的业务需求都可以通过基础组件满足，但仅有基础组件是低效的，实际开发中会有很多封装的组件。对于uni-app开发者来说，uni-app的扩展组件库是必不可少的。选择合适的组件库，可以大大提高开发效率。</p><h4 id="组件单个导入" tabindex="-1">组件单个导入 <a class="header-anchor" href="#组件单个导入" aria-label="Permalink to &quot;组件单个导入&quot;">​</a></h4><p>如果只需要使用组件库中的某个组件，可以单个导入组件。比如导入<code>uni-ui</code>组件库中的<code>uni-list</code>组件。使用HbuilderX创建的项目，直接通过<a href="https://ext.dcloud.net.cn/plugin" target="_blank" rel="noreferrer">插件市场</a>导入即可使用；而cli的项目可以通过<a href="https://ext.dcloud.net.cn/plugin" target="_blank" rel="noreferrer">插件市场</a>寻找合适的组件进行导入，也可以通过npm导入。</p><h4 id="组件库导入" tabindex="-1">组件库导入 <a class="header-anchor" href="#组件库导入" aria-label="Permalink to &quot;组件库导入&quot;">​</a></h4><p>如果需要使用组件库中的多个组件，可以选择导入组件库。组件库的导入方式有两种，一种是通过npm导入，一种是通过插件市场导入。可以通过组件库文档了解组件库的导入方式。</p><p>组件库有很多，选择时主要注意以下几点：</p><ol><li>组件库是否支持uni-app，是否支持nvue</li><li>组件库是只能在app端使用，还是可以在h5端使用</li><li>组件库是否兼容vue2和vue3</li></ol><p>可以根据上面的几点，选择合适的组件库。如果是uni-app的新手，建议选择uni-ui组件库，它是uni-app官方推荐的组件库，支持uni-app所有端，支持vue2和vue3，支持ts，而且支持nvue。而且<code>uni-ui</code>与<a href="https://tongji.dcloud.net.cn/" target="_blank" rel="noreferrer">uni统计</a>自动整合,如果有使用uni统计的需求，可以选择uni-ui。</p><h5 id="组件库推荐" tabindex="-1">组件库推荐 <a class="header-anchor" href="#组件库推荐" aria-label="Permalink to &quot;组件库推荐&quot;">​</a></h5><p>以下推荐的组件库，可以根据自己的需求选择合适的组件库。</p><ul><li><a href="https://ext.dcloud.net.cn/plugin?id=55" target="_blank" rel="noreferrer">uni-ui</a> 官方推荐的组件库，支持uni-app所有端，支持vue2和vue3，支持ts，支持nvue</li><li><a href="https://ext.dcloud.net.cn/plugin?id=1593" target="_blank" rel="noreferrer">uview-ui</a> 整合了非常多组件，功能丰富、文档清晰</li><li><a href="https://ext.dcloud.net.cn/plugin?id=239" target="_blank" rel="noreferrer">color-ui</a> 一款颜值超高的css组件库</li></ul><h2 id="_4-easycom组件规范" tabindex="-1">4. easycom组件规范 <a class="header-anchor" href="#_4-easycom组件规范" aria-label="Permalink to &quot;4. easycom组件规范&quot;">​</a></h2><p>传统vue组件，需要安装、引用、注册，三个步骤后才能使用组件。easycom将其精简为一步。</p><p>只要组件安装在项目的components目录下或uni_modules目录下，并符合components/组件名称/组件名称.vue目录结构。就可以不用引用、注册，直接在页面中使用。</p><p>比如举例的<code>uni-rate</code>组件，它导入到uni-app项目后，存放在了目录/components/uni-rate/uni-rate.vue</p><p>同时它的组件名称也叫uni-rate，所以这样的组件，不用在script里注册和引用。 如下：</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  	&lt;</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  		&lt;</span><span style="color:#85E89D;">uni-rate</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">uni-rate</span><span style="color:#E1E4E8;">&gt;</span><span style="color:#6A737D;">&lt;!-- 这里会显示一个五角星，并且点击后会自动亮星 --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  	&lt;/</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 这里不用import引入，也不需要在components内注册uni-list组件。template里就可以直接用</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  	</span><span style="color:#B392F0;">data</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  		</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  		}</span></span>
<span class="line"><span style="color:#E1E4E8;">  	}</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  	&lt;</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  		&lt;</span><span style="color:#22863A;">uni-rate</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">uni-rate</span><span style="color:#24292E;">&gt;</span><span style="color:#6A737D;">&lt;!-- 这里会显示一个五角星，并且点击后会自动亮星 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">  	&lt;/</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 这里不用import引入，也不需要在components内注册uni-list组件。template里就可以直接用</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  	</span><span style="color:#6F42C1;">data</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  		}</span></span>
<span class="line"><span style="color:#24292E;">  	}</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>不管components目录下安装了多少组件，easycom打包后会自动剔除没有使用的组件，对组件库的使用尤为友好。</p><p>组件库批量安装，随意使用，自动按需打包。以官方的uni-ui为例，在HBuilderX新建项目界面选择uni-ui项目模板，只需在页面中敲u，拉出大量组件代码块，直接选择，即可使用。大幅提升开发效率，降低使用门槛。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>如果你的组件名称或路径不符合easycom的默认规范，可以在pages.json的easycom节点进行个性化设置，自定义匹配组件的策略。</p></div><h5 id="自定义easycom配置的示例" tabindex="-1">自定义easycom配置的示例 <a class="header-anchor" href="#自定义easycom配置的示例" aria-label="Permalink to &quot;自定义easycom配置的示例&quot;">​</a></h5><p>如果需要匹配node_modules内的vue文件，需要使用packageName/path/to/vue-file-$1.vue形式的匹配规则，其中packageName为安装的包名，/path/to/vue-file-$1.vue为vue文件在包内的路径。</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;easycom&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;autoscan&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;custom&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;^uni-(.*)&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;@/components/uni-$1.vue&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 匹配components目录内的vue文件</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;^vue-file-(.*)&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;packageName/path/to/vue-file-$1.vue&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 匹配node_modules内的vue文件</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;easycom&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;autoscan&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;custom&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;^uni-(.*)&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;@/components/uni-$1.vue&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 匹配components目录内的vue文件</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;^vue-file-(.*)&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;packageName/path/to/vue-file-$1.vue&quot;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 匹配node_modules内的vue文件</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h5 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h5><ul><li>easycom方式引入的组件无需在页面内import，也不需要在components内声明，即可在任意页面使用</li><li>easycom方式引入组件不是全局引入，而是局部引入。例如在H5端只有加载相应页面才会加载使用的组件</li><li>在组件名完全一致的情况下，easycom引入的优先级低于手动引入（区分连字符形式与驼峰形式）</li><li>考虑到编译速度，直接在pages.json内修改easycom不会触发重新编译，需要改动页面内容触发。</li><li>easycom只处理vue组件，不处理小程序专用组件（如微信的wxml格式组件）。不处理后缀为.nvue的组件。但vue组件也可以全端运行，包括小程序和app-nvue。可以参考uni ui，使用vue后缀，同时兼容nvue页面。</li><li>nvue页面里引用.vue后缀的组件，会按照nvue方式使用原生渲染，其中不支持的css会被忽略掉。这种情况同样支持easycom</li></ul><h2 id="_5-uni-module规范" tabindex="-1">5. uni_module规范 <a class="header-anchor" href="#_5-uni-module规范" aria-label="Permalink to &quot;5. uni_module规范&quot;">​</a></h2><ul><li>uni_module可以使用组件、js库、页面、项目等所有DCloud插件市场所支持的种类。使用方便，易于管理。</li><li>插件开发者，可以像开发uni-app项目一样编写一个uni_modules插件，并在HBuilderX中直接上传至插件市场。</li><li>插件使用者，可以在插件市场查找符合自己需求的uni_modules插件，使用HBuilderX 3.1.0+直接导入到自己的uni-app项目中。后续还可以在HBuilderX中直接点右键升级插件。CLI创建的项目也可以直接使用uni_modules插件，只需要到插件市场导入即可。</li><li>符合uni_module规范的组件都在项目的uni_modules目录下，以插件id为目录存放。（项目模板不放在uni_modules目录下）。在HBuilderX中点右键可方便的更新插件，插件作者也可以方便的上传插件。</li><li>uni_module插件内components目录同样支持easycom规范，插件使用者可以直接在项目中使用插件内符合easycom规范的组件，当项目或插件内存在easycom组件冲突，编译时会给予提示，您可以通过修改组件目录及组件文件名称来解决冲突问题。</li></ul><h2 id="_6-原生组件和原生插件" tabindex="-1">6. 原生组件和原生插件 <a class="header-anchor" href="#_6-原生组件和原生插件" aria-label="Permalink to &quot;6. 原生组件和原生插件&quot;">​</a></h2><h4 id="基础组件里的原生组件" tabindex="-1">基础组件里的原生组件 <a class="header-anchor" href="#基础组件里的原生组件" aria-label="Permalink to &quot;基础组件里的原生组件&quot;">​</a></h4><p>uni-app的基础组件里，有一批原生组件，如video、map...</p><p>这些组件如果用于vue页面，也就是webview渲染时，会造成层级高于普通前端组件的情况。</p><p>它们的层级需要使用cover-view等特殊组件才能覆盖，同时在使用中有些需要注意的事情。</p><p>在app-nvue里没有这些问题。</p><h4 id="uni-app的app端原生插件" tabindex="-1">uni-app的App端原生插件 <a class="header-anchor" href="#uni-app的app端原生插件" aria-label="Permalink to &quot;uni-app的App端原生插件&quot;">​</a></h4><p>uni-app的App端支持原生插件，这类插件使用iOS或Android原生语言编写，封装成插件，供其他开发者使用js来调用。</p><p>原生插件分为原生组件component和原生模块module。</p><p>其实原生组件component只能在App-nvue环境中使用。</p><h2 id="_7-参考文档" tabindex="-1">7. 参考文档 <a class="header-anchor" href="#_7-参考文档" aria-label="Permalink to &quot;7. 参考文档&quot;">​</a></h2><ul><li><a href="https://uniapp.dcloud.net.cn/component/" target="_blank" rel="noreferrer">组件使用的入门教程</a></li><li><a href="https://uniapp.dcloud.net.cn/component/component-selection.html" target="_blank" rel="noreferrer">组件库选型指南</a></li></ul>`,71),o=[l];function p(r,i,c,d,u,h){return a(),e("div",null,o)}const E=t(s,[["render",p]]);export{b as __pageData,E as default};
