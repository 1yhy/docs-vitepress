import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.c3fd347f.js";const b=JSON.parse('{"title":"nvue页面开发","description":"","frontmatter":{},"headers":[],"relativePath":"uniapp/app/develope/nvue.md","filePath":"uniapp/app/develope/nvue.md","lastUpdated":1707147609000}'),e={name:"uniapp/app/develope/nvue.md"},p=l(`<h1 id="nvue页面开发" tabindex="-1">nvue页面开发 <a class="header-anchor" href="#nvue页面开发" aria-label="Permalink to &quot;nvue页面开发&quot;">​</a></h1><p>  在 App 端，如果使用 vue 页面，则使用 webview 渲染；如果使用 nvue 页面(native vue 的缩写)，则使用原生渲染。<br>   一个 App 中可以同时使用两种页面，比如首页使用 nvue，二级页使用 vue 页面，强烈建议首页使用 nvue 页面，因为 nvue 页面性能更好，体验更好。<br>   本文档主要介绍 nvue 页面的开发与vue页面的不同点。 完整示例请参考：<a href="https://uniapp.dcloud.net.cn/tutorial/nvue-outline.html#" target="_blank" rel="noreferrer">官方文档</a></p><h4 id="对-app-启动速度要求极致化。app-端如果首页使用-nvue-且在-manifest-里配置-fast-模式-那么-app-的启动速度可以控制在-1-秒左右。而使用-vue-页面的话-app-的启动速度一般是-3-秒起-取决于你的代码性能和体积。" tabindex="-1">  对 App 启动速度要求极致化。App 端如果首页使用 nvue 且在 manifest 里配置 fast 模式，那么 App 的启动速度可以控制在 1 秒左右。而使用 vue 页面的话，App 的启动速度一般是 3 秒起，取决于你的代码性能和体积。 <a class="header-anchor" href="#对-app-启动速度要求极致化。app-端如果首页使用-nvue-且在-manifest-里配置-fast-模式-那么-app-的启动速度可以控制在-1-秒左右。而使用-vue-页面的话-app-的启动速度一般是-3-秒起-取决于你的代码性能和体积。" aria-label="Permalink to &quot;&amp;emsp;&amp;emsp;对 App 启动速度要求极致化。App 端如果首页使用 nvue 且在 manifest 里配置 fast 模式，那么 App 的启动速度可以控制在 1 秒左右。而使用 vue 页面的话，App 的启动速度一般是 3 秒起，取决于你的代码性能和体积。&quot;">​</a></h4><h2 id="_1-什么情况下使用-nvue-页面" tabindex="-1">1. 什么情况下使用 nvue 页面 <a class="header-anchor" href="#_1-什么情况下使用-nvue-页面" aria-label="Permalink to &quot;1. 什么情况下使用 nvue 页面&quot;">​</a></h2><ul><li>首页使用 nvue 页面，性能更好，体验更好</li><li>解决前端控件无法覆盖原生控件的层级问题。当你使用<strong>map</strong>、<strong>video</strong>、<strong>live-pusher</strong>等原生组件时，会发现前端写的view等组件无法覆盖原生组件，层级问题处理比较麻烦，此时使用 nvue 更好。</li><li>需要高性能的区域长列表或瀑布流滚动。webview 的页面级长列表滚动是没有性能问题的（就是滚动条覆盖 webview 整体高度），但页面中某个区域做长列表滚动，则需要使用 nvue 的list、recycle-list、waterfall等组件(详见)。这些组件的性能要高于 vue 页面里的区域滚动组件scroll-view。</li></ul><h2 id="_2-nvue-页面的开发" tabindex="-1">2. nvue 页面的开发 <a class="header-anchor" href="#_2-nvue-页面的开发" aria-label="Permalink to &quot;2. nvue 页面的开发&quot;">​</a></h2><p>nvue 页面的开发与 vue 页面的开发基本一致，但也有一些不同点，主要有以下几点：</p><h4 id="_2-1-样式" tabindex="-1">2.1 样式 <a class="header-anchor" href="#_2-1-样式" aria-label="Permalink to &quot;2.1 样式&quot;">​</a></h4><ul><li>nvue 页面<strong>只能使用flex布局</strong>，不支持其他布局方式。页面开发前，首先想清楚这个页面的纵向内容有什么，哪些是要滚动的，然后每个纵向内容的横轴排布有什么，按 flex 布局设计好界面。</li><li>nvue 页面的<strong>布局排列方向默认为竖排（column）</strong>，如需改变布局方向，可以在 manifest.json -&gt; app-plus -&gt; nvue -&gt; flex-direction 节点下修改，仅在 uni-app 模式下生效。详情。</li><li><strong>文字内容，必须、只能在<code>text</code>组件下。不能在<code>div</code>、<code>view</code>的text区域里直接写文字。否则即使渲染了，也无法绑定js里的变量。只有<code>text</code>标签可以设置字体大小，字体颜色。</strong></li><li><strong>布局不能使用百分比</strong>、没有媒体查询。</li><li>**不支持背景图。**但可以使用image组件和层级来实现类似web中的背景效果。因为原生开发本身也没有web这种背景图概念</li><li>css选择器支持的比较少，<strong>只能使用 class 选择器</strong></li><li><strong>class 进行绑定时只支持数组语法。</strong></li><li>App.vue 中定义的全局css，对nvue和vue页面同时生效。如果全局css中有些css在nvue下不支持，编译时控制台会报警，建议把这些不支持的css包裹在条件编译里，APP-PLUS-NVUE</li><li>不能在 style 中引入字体文件</li><li>使用image标签，支持使用base64，<strong>不支持svg格式图片</strong></li><li>不支持 /deep/</li><li>nvue<strong>多行文本溢出显示省略号</strong>写法如下：</li></ul><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/* 1. 单行文本溢出显示省略号 */</span></span>
<span class="line"><span style="color:#85E89D;">text-overflow</span><span style="color:#E1E4E8;">: ellipsis;</span></span>
<span class="line"><span style="color:#E1E4E8;">lines: 1;</span></span>
<span class="line"><span style="color:#6A737D;">/* 2. 错误写法：多行文本溢出显示省略号 */</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">display: -webkit-box;</span></span>
<span class="line"><span style="color:#E1E4E8;">-webkit-box-orient: vertical;</span></span>
<span class="line"><span style="color:#E1E4E8;">-webkit-line-clamp: 2;</span></span>
<span class="line"><span style="color:#E1E4E8;">overflow: hidden;</span></span>
<span class="line"><span style="color:#6A737D;">/* 2. 正确写法：多行文本溢出显示省略号 */</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">lines: 2;</span></span>
<span class="line"><span style="color:#85E89D;">text-overflow</span><span style="color:#E1E4E8;">: ellipsis;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/* 1. 单行文本溢出显示省略号 */</span></span>
<span class="line"><span style="color:#22863A;">text-overflow</span><span style="color:#24292E;">: ellipsis;</span></span>
<span class="line"><span style="color:#24292E;">lines: 1;</span></span>
<span class="line"><span style="color:#6A737D;">/* 2. 错误写法：多行文本溢出显示省略号 */</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">display: -webkit-box;</span></span>
<span class="line"><span style="color:#24292E;">-webkit-box-orient: vertical;</span></span>
<span class="line"><span style="color:#24292E;">-webkit-line-clamp: 2;</span></span>
<span class="line"><span style="color:#24292E;">overflow: hidden;</span></span>
<span class="line"><span style="color:#6A737D;">/* 2. 正确写法：多行文本溢出显示省略号 */</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">lines: 2;</span></span>
<span class="line"><span style="color:#22863A;">text-overflow</span><span style="color:#24292E;">: ellipsis;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li>nvue页面只能使用Id选择器获取元素节点信息，例如：</li></ul><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 获取节点信息</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">query</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> uni.</span><span style="color:#B392F0;">createSelectorQuery</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">in</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">query.</span><span style="color:#B392F0;">select</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;#id&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">boundingClientRect</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;得到布局位置信息&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">stringify</span><span style="color:#E1E4E8;">(data));</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;节点离页面顶部的距离为&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> data.top);</span></span>
<span class="line"><span style="color:#E1E4E8;">}).</span><span style="color:#B392F0;">exec</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 获取节点信息</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">query</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> uni.</span><span style="color:#6F42C1;">createSelectorQuery</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">in</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">query.</span><span style="color:#6F42C1;">select</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;#id&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">boundingClientRect</span><span style="color:#24292E;">(</span><span style="color:#E36209;">data</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;得到布局位置信息&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">JSON</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">stringify</span><span style="color:#24292E;">(data));</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;节点离页面顶部的距离为&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> data.top);</span></span>
<span class="line"><span style="color:#24292E;">}).</span><span style="color:#6F42C1;">exec</span><span style="color:#24292E;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="_2-2-api" tabindex="-1">2.2 api <a class="header-anchor" href="#_2-2-api" aria-label="Permalink to &quot;2.2 api&quot;">​</a></h4><ul><li>一个页面可以同时新建vue页面和nvue页面，在app端，同名情况下，优先使用nvue页面，但是在h5端，只能使用vue页面</li><li>template 语法大致相同，App 端 nvue 拥有额外的专用组件，详见<a href="https://uniapp.dcloud.io/component/barcode" target="_blank" rel="noreferrer">https://uniapp.dcloud.io/component/barcode</a></li><li>nvue 页面控制显隐<strong>只可以使用v-if不可以使用v-show</strong></li><li>在 App.vue 中定义的<strong>全局js变量不会在 nvue 页面生效</strong>。</li><li><strong>nvue页面支持typescript</strong></li></ul><h2 id="_3-nvue-里不支持的-uni-app-api" tabindex="-1">3.nvue 里不支持的 uni-app API <a class="header-anchor" href="#_3-nvue-里不支持的-uni-app-api" aria-label="Permalink to &quot;3.nvue 里不支持的 uni-app API&quot;">​</a></h2><h5 id="动画" tabindex="-1">动画 <a class="header-anchor" href="#动画" aria-label="Permalink to &quot;动画&quot;">​</a></h5><table><thead><tr><th>API</th><th style="text-align:center;">说明</th><th style="text-align:center;">解决方案</th></tr></thead><tbody><tr><td>uni.createAnimation()</td><td style="text-align:center;">创建一个动画实例</td><td style="text-align:center;"><a href="https://uniapp.dcloud.net.cn/tutorial/nvue-api.html#animation" target="_blank" rel="noreferrer">animation</a></td></tr></tbody></table><h5 id="滚动" tabindex="-1">滚动 <a class="header-anchor" href="#滚动" aria-label="Permalink to &quot;滚动&quot;">​</a></h5><table><thead><tr><th>API</th><th style="text-align:center;">说明</th><th style="text-align:center;">解决方案</th></tr></thead><tbody><tr><td>uni.pageScrollTo()</td><td style="text-align:center;">将页面滚动到目标位置</td><td style="text-align:center;"><a href="https://uniapp.dcloud.net.cn/tutorial/nvue-api.html#scrolltoelement" target="_blank" rel="noreferrer">scrollToElement</a></td></tr></tbody></table><h5 id="节点布局交互" tabindex="-1">节点布局交互 <a class="header-anchor" href="#节点布局交互" aria-label="Permalink to &quot;节点布局交互&quot;">​</a></h5><table><thead><tr><th>API</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td>uni.createIntersectionObserver()</td><td style="text-align:center;">创建并返回一个 IntersectionObserver 对象实例</td></tr></tbody></table><h5 id="绘画" tabindex="-1">绘画 <a class="header-anchor" href="#绘画" aria-label="Permalink to &quot;绘画&quot;">​</a></h5><table><thead><tr><th>canvas</th><th style="text-align:center;">API使用，详见canvas文档。</th></tr></thead></table><h2 id="_4-nvue中使用字体图标" tabindex="-1">4. nvue中使用字体图标 <a class="header-anchor" href="#_4-nvue中使用字体图标" aria-label="Permalink to &quot;4. nvue中使用字体图标&quot;">​</a></h2><h4 id="addrule-type-contentobject" tabindex="-1">addRule(type, contentObject) <a class="header-anchor" href="#addrule-type-contentobject" aria-label="Permalink to &quot;addRule(type, contentObject)&quot;">​</a></h4><ul><li>@fontFace 协议名称，不可修改。</li><li>@fontFamily font-family的名称。</li><li>@src 字体地址，url(&#39;&#39;) 是保留字段，其参数如下: <ul><li>http. 从HTTP请求加载, e.g. url(&#39;<a href="http://at.alicdn.com/t/font_1469606063_76593.ttf" target="_blank" rel="noreferrer">http://at.alicdn.com/t/font_1469606063_76593.ttf</a>&#39;)</li><li>https. 从HTTPS请求加载, e.g. url(&#39;<a href="https://at.alicdn.com/t/font_1469606063_76593.ttf" target="_blank" rel="noreferrer">https://at.alicdn.com/t/font_1469606063_76593.ttf</a>&#39;)</li><li>local, Android ONLY. 从assets目录读取, e.g. url(&#39;local://foo.ttf&#39;), foo.ttf 是文件名在你的assets目录中.</li><li>file. 从本地文件读取, e.g. url(&#39;file://storage/emulated/0/Android/data/com.alibaba.weex/cache/http:__at.alicdn.com_t_font_1469606063_76593.ttf&#39;)</li><li>data. 从base64读取, e.g. url(&#39;data:font/truetype;charset=utf-8;base64,AAEAAAALAIAAAwAwR1NVQrD+....&#39;), 上述data字段不全。</li></ul></li></ul><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">		&lt;</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">			&lt;</span><span style="color:#FDAEB7;font-style:italic;">text</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;iconfont&quot;</span><span style="color:#E1E4E8;">&gt;</span><span style="color:#79B8FF;">&amp;#xe85c;</span><span style="color:#E1E4E8;">&lt;/</span><span style="color:#FDAEB7;font-style:italic;">text</span><span style="color:#E1E4E8;">&gt;	</span></span>
<span class="line"><span style="color:#E1E4E8;">		&lt;/</span><span style="color:#FDAEB7;font-style:italic;">view</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#B392F0;">beforeCreate</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> domModule </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> weex.</span><span style="color:#B392F0;">requireModule</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;dom&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        domModule.</span><span style="color:#B392F0;">addRule</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;fontFace&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">          fontFamily: </span><span style="color:#9ECBFF;">&#39;iconfont&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          src: </span><span style="color:#9ECBFF;">&quot;url(&#39;/static/css/iconfont.ttf&#39;)&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        })</span></span>
<span class="line"><span style="color:#E1E4E8;">			}</span></span>
<span class="line"><span style="color:#E1E4E8;">		}</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">style</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#B392F0;">.my-iconfont</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#79B8FF;">font-family</span><span style="color:#E1E4E8;">:iconfont;</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#79B8FF;">font-size</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;">rpx;</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#79B8FF;">color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#00AAFF</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">		}</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;/</span><span style="color:#85E89D;">style</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">		&lt;</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">			&lt;</span><span style="color:#B31D28;font-style:italic;">text</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;iconfont&quot;</span><span style="color:#24292E;">&gt;</span><span style="color:#005CC5;">&amp;#xe85c;</span><span style="color:#24292E;">&lt;/</span><span style="color:#B31D28;font-style:italic;">text</span><span style="color:#24292E;">&gt;	</span></span>
<span class="line"><span style="color:#24292E;">		&lt;/</span><span style="color:#B31D28;font-style:italic;">view</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;/</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#6F42C1;">beforeCreate</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> domModule </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> weex.</span><span style="color:#6F42C1;">requireModule</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;dom&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        domModule.</span><span style="color:#6F42C1;">addRule</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;fontFace&#39;</span><span style="color:#24292E;">, {</span></span>
<span class="line"><span style="color:#24292E;">          fontFamily: </span><span style="color:#032F62;">&#39;iconfont&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">          src: </span><span style="color:#032F62;">&quot;url(&#39;/static/css/iconfont.ttf&#39;)&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        })</span></span>
<span class="line"><span style="color:#24292E;">			}</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">style</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6F42C1;">.my-iconfont</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#005CC5;">font-family</span><span style="color:#24292E;">:iconfont;</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#005CC5;">font-size</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">60</span><span style="color:#24292E;">rpx;</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#005CC5;">color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#00AAFF</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	&lt;/</span><span style="color:#22863A;">style</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h2 id="_4-参考文档" tabindex="-1">4.参考文档 <a class="header-anchor" href="#_4-参考文档" aria-label="Permalink to &quot;4.参考文档&quot;">​</a></h2><ul><li><a href="https://uniapp.dcloud.net.cn/component/barcode.html#" target="_blank" rel="noreferrer">nvue组件</a></li><li><a href="https://uniapp.dcloud.net.cn/tutorial/nvue-outline.html#" target="_blank" rel="noreferrer">nvue开发</a></li><li><a href="https://uniapp.dcloud.net.cn/tutorial/nvue-api.html#addrule" target="_blank" rel="noreferrer">nvue使用字体图标</a></li></ul>`,29),t=[p];function o(r,c,i,E,y,u){return n(),a("div",null,t)}const h=s(e,[["render",o]]);export{b as __pageData,h as default};
